[{"E:\\dec-exp\\src\\index.js":"1","E:\\dec-exp\\src\\reportWebVitals.js":"2","E:\\dec-exp\\src\\containers\\App.js":"3","E:\\dec-exp\\src\\components\\Navigation\\Navigation.js":"4","E:\\dec-exp\\src\\components\\Logo\\Logo.js":"5","E:\\dec-exp\\src\\containers\\Header\\Header.js":"6","E:\\dec-exp\\src\\store\\reducers\\reducer_location.js":"7","E:\\dec-exp\\src\\store\\actions\\actionTypes.js":"8","E:\\dec-exp\\src\\store\\actions\\index.js":"9","E:\\dec-exp\\src\\components\\Categories\\Categories.js":"10","E:\\dec-exp\\src\\UI\\Backdrop\\Backdrop.js":"11","E:\\dec-exp\\src\\components\\Card\\Card.js":"12","E:\\dec-exp\\src\\components\\Footer.js\\Footer.js":"13","E:\\dec-exp\\src\\components\\Language\\Language.js":"14","E:\\dec-exp\\src\\components\\Searchbar\\Searchbar.js":"15","E:\\dec-exp\\src\\hoc\\asyncComponent\\asyncComponent.js":"16","E:\\dec-exp\\src\\components\\Authorization\\AuthSignup.js":"17","E:\\dec-exp\\src\\components\\Authorization\\AuthSignin.js":"18","E:\\dec-exp\\src\\components\\Dropdown\\Dropdown.js":"19","E:\\dec-exp\\src\\components\\Authorization\\ResetPass.js":"20","E:\\dec-exp\\src\\components\\Filter\\Filter.js":"21","E:\\dec-exp\\src\\store\\reducers\\reducer_data.js":"22","E:\\dec-exp\\src\\store\\Filters\\for_kids.js":"23","E:\\dec-exp\\src\\store\\Categories\\categories.js":"24","E:\\dec-exp\\src\\store\\actions\\actions_location.js":"25","E:\\dec-exp\\src\\store\\reducers\\reducer__filter.js":"26","E:\\dec-exp\\src\\store\\actions\\actions_filter.js":"27","E:\\dec-exp\\src\\store\\actions\\actions_data.js":"28","E:\\dec-exp\\src\\utilities\\utilities.js":"29","E:\\dec-exp\\src\\components\\Tooltip\\Tooltip.js":"30","E:\\dec-exp\\src\\containers\\Adview\\Adview.js":"31","E:\\dec-exp\\src\\containers\\Main\\Main.js":"32","E:\\dec-exp\\src\\components\\ShadowComponent\\ShadowComponent.js":"33","E:\\dec-exp\\src\\store\\Filters\\real_estate.js":"34","E:\\dec-exp\\src\\store\\Filters\\electronics.js":"35","E:\\dec-exp\\src\\store\\Filters\\transport_auto.js":"36","E:\\dec-exp\\src\\store\\Filters\\jobs.js":"37","E:\\dec-exp\\src\\store\\Filters\\pets.js":"38","E:\\dec-exp\\src\\store\\Filters\\home_and_garden.js":"39","E:\\dec-exp\\src\\store\\Filters\\business_and_services.js":"40","E:\\dec-exp\\src\\store\\Filters\\fashion_and_style.js":"41","E:\\dec-exp\\src\\store\\Filters\\sports_hobby_and_comfort.js":"42"},{"size":1243,"mtime":1609050198914,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"44"},{"size":1610,"mtime":1609263541683,"results":"46","hashOfConfig":"44"},{"size":7629,"mtime":1609506519880,"results":"47","hashOfConfig":"44"},{"size":395,"mtime":1608895329355,"results":"48","hashOfConfig":"44"},{"size":2855,"mtime":1609262954796,"results":"49","hashOfConfig":"44"},{"size":764,"mtime":1608902289310,"results":"50","hashOfConfig":"44"},{"size":652,"mtime":1609096193849,"results":"51","hashOfConfig":"44"},{"size":393,"mtime":1609096213510,"results":"52","hashOfConfig":"44"},{"size":6045,"mtime":1609603263181,"results":"53","hashOfConfig":"44"},{"size":286,"mtime":1609092092790,"results":"54","hashOfConfig":"44"},{"size":1800,"mtime":1609571059101,"results":"55","hashOfConfig":"44"},{"size":2269,"mtime":1609179238626,"results":"56","hashOfConfig":"44"},{"size":1597,"mtime":1608828572745,"results":"57","hashOfConfig":"44"},{"size":4548,"mtime":1609595887729,"results":"58","hashOfConfig":"44"},{"size":549,"mtime":1609011609885,"results":"59","hashOfConfig":"44"},{"size":2947,"mtime":1609011708548,"results":"60","hashOfConfig":"44"},{"size":2813,"mtime":1609012071429,"results":"61","hashOfConfig":"44"},{"size":196,"mtime":1608835121804,"results":"62","hashOfConfig":"44"},{"size":3220,"mtime":1609011872343,"results":"63","hashOfConfig":"44"},{"size":12474,"mtime":1609580833154,"results":"64","hashOfConfig":"44"},{"size":3693,"mtime":1609487310154,"results":"65","hashOfConfig":"44"},{"size":3405,"mtime":1609075991734,"results":"66","hashOfConfig":"44"},{"size":3250,"mtime":1609601375057,"results":"67","hashOfConfig":"44"},{"size":439,"mtime":1609047572479,"results":"68","hashOfConfig":"44"},{"size":2396,"mtime":1609096189866,"results":"69","hashOfConfig":"44"},{"size":1238,"mtime":1609096193850,"results":"70","hashOfConfig":"44"},{"size":183,"mtime":1609047579103,"results":"71","hashOfConfig":"44"},{"size":1207,"mtime":1609603418539,"results":"72","hashOfConfig":"44"},{"size":276,"mtime":1609432929853,"results":"73","hashOfConfig":"44"},{"size":31635,"mtime":1609581352521,"results":"74","hashOfConfig":"44"},{"size":2026,"mtime":1609583030481,"results":"75","hashOfConfig":"44"},{"size":2022,"mtime":1609522582173,"results":"76","hashOfConfig":"44"},{"size":2356,"mtime":1609596536223,"results":"77","hashOfConfig":"44"},{"size":4249,"mtime":1609596531693,"results":"78","hashOfConfig":"44"},{"size":5380,"mtime":1609603465025,"results":"79","hashOfConfig":"44"},{"size":8355,"mtime":1609604336547,"results":"80","hashOfConfig":"44"},{"size":4461,"mtime":1609604503152,"results":"81","hashOfConfig":"44"},{"size":5418,"mtime":1609600187483,"results":"82","hashOfConfig":"44"},{"size":7814,"mtime":1609604695223,"results":"83","hashOfConfig":"44"},{"size":3486,"mtime":1609601531710,"results":"84","hashOfConfig":"44"},{"size":3164,"mtime":1609604800538,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},"ta4lz8",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"89"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"89"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"89"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\dec-exp\\src\\index.js",["179"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\n\nimport localization from './store/reducers/reducer_location';\nimport data from './store/reducers/reducer_data';\nimport filters from './store/reducers/reducer__filter';\n\nimport App from './containers/App';\nimport './index.scss';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  localization,\n  data,\n  filters\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["180","181"],"E:\\dec-exp\\src\\reportWebVitals.js",[],"E:\\dec-exp\\src\\containers\\App.js",[],"E:\\dec-exp\\src\\components\\Navigation\\Navigation.js",["182","183","184","185","186"],"import React, { PureComponent } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport Language from '../Language/Language';\r\nimport * as utils from '../../utilities/utilities';\r\n\r\nimport Logo from '../Logo/Logo';\r\nimport './Navigation.scss';\r\nimport Dropdown from '../Dropdown/Dropdown';\r\nimport Categories from '../Categories/Categories';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nclass Navigation extends PureComponent {\r\n    state = {\r\n        toggleLogo: false,\r\n        signedIn: true,\r\n        inputFocused: false,\r\n        showCat: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    onScroll = () => {\r\n        const scroll = document.documentElement.scrollTop;\r\n        if (scroll > 0) this.setState({ toggleLogo: true });\r\n        if (scroll === 0) this.setState({ toggleLogo: false });\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('Navigation.js update');\r\n    }\r\n\r\n    onFocus = () => this.setState({ inputFocused: true });\r\n    onBlur = () => this.setState({ inputFocused: false });\r\n\r\n    onClickCat = () => this.setState({ showCat: true });\r\n    onClickCatHide = () => this.setState({ showCat: false });\r\n\r\n    render() {\r\n        const signClass = ['Navigation__item'];\r\n        if (this.state.inputFocused) signClass.push('Navigation__item--keep');\r\n\r\n        let userDrop = (\r\n            <Dropdown>\r\n                <p className=\"Dropdown__title\">Profile:</p>\r\n                <ul className=\"Dropdown__list\">\r\n                    <li className=\"Dropdown__item\">\r\n                        <a href=\"#\" className=\"Dropdown__link\">\r\n                            Ads\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"Dropdown__item\">\r\n                        <a href=\"#\" className=\"Dropdown__link Dropdown__link--counter\">\r\n                            Messages\r\n                            <span className=\"Dropdown__counter\">3</span>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"Dropdown__item\">\r\n                        <a href=\"#settings\" className=\"Dropdown__link\">\r\n                            Settings\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"Dropdown__item\">\r\n                        <a href=\"#\" className=\"Dropdown__link\">\r\n                            Payments\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                <p className=\"Dropdown__title\">Favourites:</p>\r\n                <ul className=\"Dropdown__list\">\r\n                    <li className=\"Dropdown__item\">\r\n                        <a href=\"#\" className=\"Dropdown__link\">\r\n                            Ads\r\n                            <span className=\"Dropdown__counter\">1</span>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"Dropdown__item\">\r\n                        <a href=\"#\" className=\"Dropdown__link\">\r\n                            Searches\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                <button className=\"Dropdown__btn Dropdown__btn--grey\">Log out</button>\r\n            </Dropdown>\r\n        );\r\n        if (!this.state.signedIn) {\r\n            userDrop = (\r\n                <Dropdown class=\"Dropdown--w-auto\">\r\n                    <div className=\"Dropdown__link Dropdown__link--col\">\r\n                        <p className=\"Dropdown__info Dropdown__info--bold\">Sign in</p>\r\n                        <form className=\"Dropdown__form\">\r\n                            <input className=\"Dropdown__input input\" type=\"text\" placeholder=\"Enter your phone number\" onFocus={() => this.onFocus()} onBlur={() => this.onBlur()} />\r\n                            <input className=\"Dropdown__input input\" type=\"password\" placeholder=\"Enter your password\" onFocus={() => this.onFocus()} onBlur={() => this.onBlur()} />\r\n                            <button className=\"btn btn__primary Dropdown__btn--sign\" onFocus={() => this.onFocus()} onBlur={() => this.onBlur()} >Sign in</button>\r\n                            <p className=\"Dropdown__info\">Do not have an account? <Link to=\"/signup\" className=\"Dropdown__info--high\">Sign up</Link></p>\r\n                        </form>\r\n                    </div>\r\n                </Dropdown>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {(this.props.cat && this.state.showCat) &&\r\n                    <div className=\"Categories__container\">\r\n                        <Backdrop z={96} click={this.onClickCatHide} />\r\n                        <Categories class=\"Categories--fix\" clickItem={this.onClickCatHide} />\r\n                    </div>\r\n                }\r\n                <header className=\"Navigation\">\r\n                    <div className=\"container\">\r\n                        <nav role=\"navigation\" className=\"Navigation__wrapper\">\r\n                            <div className=\"Navigation__list\">\r\n                                {this.state.toggleLogo && <Logo classOver=\"Navigation__item\" />}\r\n                                {!this.state.toggleLogo && <Language class=\"Navigation__item\" dropClass=\"Dropdown--left-fix\" />}\r\n                            </div>\r\n                            <div className=\"Navigation__list\">\r\n                                <div className={signClass.join(' ')}>\r\n                                    <Link to=\"/signin\" className=\"Navigation__link\">\r\n                                        <svg className=\"Navigation__icon Navigation__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                        <span className=\"Navigation__title  Navigation__title--user\">{this.state.signedIn ? 'My profile' : 'Sign in'}</span>\r\n                                        <div className=\"Navigation__iconbox\">\r\n                                            <svg className=\"Navigation__icon Navigation__icon--abs Navigation__icon--white\" dangerouslySetInnerHTML={{__html: utils.use('user')}} />\r\n                                            {this.state.signedIn && <span></span>}\r\n                                        </div>\r\n                                    </Link>\r\n                                    {userDrop}\r\n                                </div>\r\n                                <button className=\"btn btn__primary Navigation__btn\">\r\n                                    <span className=\"Navigation__title Navigation__title--white\">Advert</span>\r\n                                    <svg className=\"Navigation__icon Navigation__icon--white\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                </button>\r\n                                {this.props.cat && \r\n                                    <button className=\"btn btn__secondary Navigation__btn\" onClick={() => this.onClickCat()}>\r\n                                        <span className=\"Navigation__title Navigation__title--white\">Categories</span>\r\n                                        <svg className=\"Navigation__icon Navigation__icon--white\" dangerouslySetInnerHTML={{__html: utils.use('menu')}} />\r\n                                    </button>\r\n                                }\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                </header>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Navigation);","E:\\dec-exp\\src\\components\\Logo\\Logo.js",[],"E:\\dec-exp\\src\\containers\\Header\\Header.js",["187"],"import React, { Component } from 'react';\r\n\r\nimport SwiperCore, { Autoplay, Navigation, Pagination } from 'swiper'; \r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\nimport 'swiper/swiper.scss'\r\nimport 'swiper/components/pagination/pagination.scss'\r\n\r\nimport './Header.scss';\r\nimport sprite from '../../assets/icons/sprite.svg';\r\nimport Categories from '../../components/Categories/Categories';\r\n\r\nimport car from '../../assets/images/devon-janse-van-rensburg-xJhma-g2cnA-unsplash-compressed (3).jpg';\r\nimport int from '../../assets/images/jonathan-wolf-7sKmRRNH_1Y-unsplash-compressed.jpg';\r\nimport int2 from '../../assets/images/taisiia-shestopal-wXwZyBhGSAc-unsplash-compressed.jpg';\r\n\r\nSwiperCore.use([Autoplay, Navigation, Pagination]);\r\n\r\nconst use = (svg) => `<use xlink:href=\"${sprite}#${svg}\"></use>`;\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        ads: [\r\n            { title: 'Discover Everything', img: car },\r\n            { title: 'Discover Everything', img: int },\r\n            { title: 'Discover Everything', img: int2 }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        const ads = this.state.ads.map((el, i) => {\r\n            return (\r\n                <SwiperSlide className=\"Header__item\" key={i}>\r\n                    <img className=\"Header__img\" src={el.img}/>\r\n                    <h1 className=\"Header__heading\">{el.title}</h1>\r\n                </SwiperSlide>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <header className=\"Header\">\r\n                <div className=\"container\">\r\n                    <div className=\"Header__wrapper\">\r\n                        <Categories />\r\n                        <Swiper \r\n                            className=\"Header__list gradient gradient--right\"\r\n                            autoplay={{ delay: 3000, disableOnInteraction: false, waitForTransition: true }}\r\n                            navigation={{ prevEl: '.btn__rounded--left', nextEl: '.btn__rounded--right', disabledClass: 'btn__rounded--disabled' }}\r\n                            pagination={{el: '.swiper-pagination', clickable: true}}>\r\n                            {ads}\r\n                            <button className=\"btn btn__rounded btn__rounded--left\">\r\n                                <svg className=\"Header__icon\" dangerouslySetInnerHTML={{__html: use('chevron-left')}} />\r\n                            </button>\r\n                            <button className=\"btn btn__rounded btn__rounded--right\">\r\n                                <svg className=\"Header__icon\" dangerouslySetInnerHTML={{__html: use('chevron-right')}} />\r\n                            </button>\r\n                            <div className=\"swiper-pagination\"></div>\r\n                        </Swiper>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default React.memo(Header);","E:\\dec-exp\\src\\store\\reducers\\reducer_location.js",[],"E:\\dec-exp\\src\\store\\actions\\actionTypes.js",[],"E:\\dec-exp\\src\\store\\actions\\index.js",[],"E:\\dec-exp\\src\\components\\Categories\\Categories.js",["188","189"],"E:\\dec-exp\\src\\UI\\Backdrop\\Backdrop.js",[],"E:\\dec-exp\\src\\components\\Card\\Card.js",[],"E:\\dec-exp\\src\\components\\Footer.js\\Footer.js",["190"],"import React from 'react';\r\n\r\nimport './Footer.scss';\r\nimport Logo from '../Logo/Logo';\r\nimport Language from '../Language/Language';\r\n\r\nimport * as utils from '../../utilities/utilities';\r\n\r\nconst Footer = props => {\r\n\r\n    const year = new Date().getFullYear();\r\n\r\n    const navs = ['Help', 'Enterprise Adverts', 'Terms of use', 'Privacy Policy', 'SBUY Guide', 'Security measures', 'Site map', 'Map of regions', 'Career', 'Feedback'];\r\n\r\n    const navItems = navs.map((el, i) => {\r\n        return (\r\n            <li className=\"Footer__item\" key={i}>\r\n                <a href=\"#\" className=\"Footer__link\">{el}</a>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <footer className=\"Footer\">\r\n            <div className=\"Footer__head\">\r\n                <div className=\"container\">\r\n                    <div className=\"Footer__headwrap\">\r\n                        <div className=\"Navigation__item\">\r\n                            <svg className=\"Footer__icon\" dangerouslySetInnerHTML={{__html: utils.use('home')}} />\r\n                            <h5 className=\"Footer__heading\">Home</h5>\r\n                        </div>\r\n                        <Language class=\"Navigation__item\" dropClass=\"Dropdown--right-fix\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"Footer__wrapper\">\r\n                    <div className=\"Footer__body\">\r\n                        <div div className=\"Footer__group\">\r\n                            <Logo class=\"Footer__logo\" />\r\n                            <ul className=\"Footer__list\">\r\n                                {navItems}\r\n                            </ul>\r\n                            <p className=\"Footer__info\">\r\n                                For all questions, you can contact us<br/> at any convenient time by phone or email<br/>\r\n                                +998 (71) 240-60-50 <br/>\r\n                                sbuy@retail.uz\r\n                            </p>\r\n                        </div>\r\n                        <p className=\"Footer__info\">{year} SBUY&copy;</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default React.memo(Footer);","E:\\dec-exp\\src\\components\\Language\\Language.js",["191"],"import { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../store/actions';\r\n\r\nimport sprite from '../../assets/icons/sprite.svg';\r\nconst use = (svg) => `<use xlink:href=\"${sprite}#${svg}\"></use>`;\r\n\r\nconst Language = (props) => {\r\n\r\n    const langs = ['O\\'zbekcha', 'English', 'Русский'];\r\n\r\n    const langItems = langs.map((el, i) => {\r\n        return (\r\n            <div className=\"Dropdown__item\" key={i} onClick={() => props.onChangeLanguage(el)}>\r\n                <div className=\"Dropdown__link\">{el}</div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={`Language ${props.class ? props.class : ''}`}>\r\n            <svg className=\"Navigation__icon\" dangerouslySetInnerHTML={{__html: use('globe')}} />\r\n            <span className=\"Navigation__title\">{props.lang}</span>\r\n            <svg className=\"Navigation__icon Navigation__icon--arrow\" dangerouslySetInnerHTML={{__html: use('chevron-down')}} />\r\n            <div className={`Dropdown ${props.dropClass ? props.dropClass : ''}`}>\r\n                <p className=\"Dropdown__title\">Language:</p>\r\n                {langItems}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        lang: state.localization.lang\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeLanguage: (lang) => dispatch(actions.changeLanguage(lang)),\r\n        onChangeLocation: (loc) => dispatch(actions.changeLocation(loc))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Language);","E:\\dec-exp\\src\\components\\Searchbar\\Searchbar.js",["192"],"E:\\dec-exp\\src\\hoc\\asyncComponent\\asyncComponent.js",[],"E:\\dec-exp\\src\\components\\Authorization\\AuthSignup.js",[],"E:\\dec-exp\\src\\components\\Authorization\\AuthSignin.js",["193"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Language from '../Language/Language';\r\n\r\nimport Logo from '../Logo/Logo';\r\n\r\nimport './Authorization.scss';\r\nimport sprite from '../../assets/icons/sprite.svg';\r\n\r\nconst use = (svg) => `<use xlink:href=\"${sprite}#${svg}\"></use>`;\r\n\r\nclass AuthSignin extends Component {\r\n    state = {\r\n        inputFocused: false\r\n    }\r\n\r\n    onFocus = () => this.setState({ inputFocused: true });\r\n    onBlur = () => this.setState({ inputFocused: false });\r\n\r\n    render() {\r\n        const wrapClass = ['Authorization__wrapper'];\r\n        if (this.state.inputFocused) wrapClass.push('Authorization__wrapper--animate');\r\n\r\n        return (\r\n            <div className=\"Authorization\">\r\n                {this.state.inputFocused && <Backdrop z={1} click={this.onBlur} />}\r\n                <Language class=\"Authorization__lang\" dropClass=\"Dropdown--left-fix\"/>\r\n                <div className={wrapClass.join(' ')} onClick={() => this.onFocus()}>\r\n                    <div className=\"Authorization__head\">\r\n                        <Logo />\r\n                        <Link to=\"/signup\" className=\"Authorization__info Authorization__info--heading\">\r\n                            <svg className=\"Authorization__icon\" dangerouslySetInnerHTML={{__html: use('user-plus')}} />\r\n                            Sign up\r\n                        </Link>\r\n                    </div>\r\n                    <form className=\"Authorization__form\">\r\n                    <input \r\n                        className=\"Authorization__input input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Enter your phone number\" />\r\n                    <input \r\n                        className=\"Authorization__input input\" \r\n                        type=\"password\" \r\n                        placeholder=\"Enter your password\" />\r\n                        <div className=\"Authorization__item\">\r\n                            <input type=\"checkbox\" id=\"remember\" className=\"checkbox\" />\r\n                            <label htmlFor=\"remember\" className=\"label\">\r\n                                <span></span>\r\n                                Stay logged in\r\n                            </label>\r\n                        </div>\r\n                    <button className=\"btn btn__primary Authorization__btn\">Sign in</button>\r\n                    <Link to=\"/password-reset\" className=\"Authorization__info\">Reset password</Link>\r\n                    <p className=\"Authorization__info\">Do not have an account? <Link to=\"/signup\" className=\"Authorization__info--high\">Sign up</Link></p>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthSignin;","E:\\dec-exp\\src\\components\\Dropdown\\Dropdown.js",[],"E:\\dec-exp\\src\\components\\Authorization\\ResetPass.js",[],"E:\\dec-exp\\src\\components\\Filter\\Filter.js",["194","195","196"],"import React, { PureComponent } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Filter.scss';\r\nimport Dropdown from '../Dropdown/Dropdown';\r\nimport * as actions from '../../store/actions';\r\nimport * as utils from '../../utilities/utilities';\r\n\r\nclass Filter extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterConfig: {}\r\n        }\r\n        this.category = this.props.match.params.category;\r\n        this.subCategory = this.props.match.params.subcategory;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const filter = await import(`../../store/Filters/${this.category}`);\r\n            this.setState({ filterConfig: filter.default });\r\n        } catch(er) {\r\n            this.setState({ filterConfig: null });\r\n            console.log(er);\r\n        }\r\n    }\r\n\r\n    // onChangeCardView = (list) => {\r\n    //     const root = document.documentElement;\r\n    //     root.style.setProperty('--flex-dir', 'column');\r\n    //     root.style.setProperty('--flex-basis', '100%');\r\n    //     root.style.setProperty('--mr-card', '0');\r\n    //     root.style.setProperty('--mb-card', '2rem');\r\n    //     root.style.setProperty('--wrap-card-width', '20%');\r\n    //     root.style.setProperty('--wrap-card-flex-dir', 'row');\r\n    //     root.style.setProperty('--wrap-card-flex-just', 'space-between');\r\n    //     root.style.setProperty('--height-card', 'max-content');\r\n    //     root.style.setProperty('--fav-card-pos', 'relative');\r\n    //     root.style.setProperty('--wrap-card-flex-align', 'center');\r\n    //     root.style.setProperty('--card-list-just', 'flex-end');\r\n    // }\r\n\r\n    render() {\r\n\r\n        let subCatItems;\r\n        let counters;\r\n        \r\n        const categoryObj = this.state.filterConfig[this.category];\r\n        \r\n        if (categoryObj) {\r\n\r\n            const innerSubCatItems = categoryObj.items[this.subCategory];\r\n\r\n            subCatItems = innerSubCatItems.sub.map((obj, index) => {\r\n\r\n                const innerItems = obj.items.map((el, i) => {\r\n                    return <div className=\"Filter__dropitem\" key={i} onClick={() => this.props[obj.method](utils.toLower(el))}>{utils.capitalize(el)}</div>\r\n                });\r\n\r\n                return (\r\n                    <li className=\"Filter__item\" key={index}>\r\n                        <p className=\"Filter__title\">{obj.title}</p>\r\n                        <div className=\"Filter__input input\">\r\n                            {utils.capitalize(this.props[utils.toLower(obj.title)])}\r\n                            <svg className=\"Filter__icon Filter__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                            <Dropdown class=\"Dropdown--full Dropdown--sm-s\">\r\n                                {innerItems}\r\n                            </Dropdown>\r\n                        </div>\r\n                    </li>\r\n                );\r\n            });\r\n        \r\n            counters = innerSubCatItems.counters.map((el, i) => {\r\n                return (\r\n                    <li className=\"Filter__item\" key={i}>\r\n                        <p className=\"Filter__title\">{el.title}</p>\r\n                        <div className=\"Filter__group\">\r\n                            <label className=\"Filter__label\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"Filter__input Filter__input--small input\" \r\n                                    placeholder=\"from\" \r\n                                    onChange={(e) => this.props[el.method](e.target.value)} \r\n                                    value={this.props[utils.toLower(el.title)].from} />\r\n                                <button className=\"Filter__btn Filter__btn--abs\" onClick={() => this.props[el.method]('')}>\r\n                                    <svg className=\"Filter__icon Filter__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                </button>\r\n                            </label>\r\n                            <label className=\"Filter__label\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"Filter__input Filter__input--small Filter__input--border  input\" \r\n                                    placeholder=\"to\" \r\n                                    onChange={(e) => this.props[el.methodEnd](e.target.value)} \r\n                                    value={this.props[utils.toLower(el.title)].to} />\r\n                                <button className=\"Filter__btn Filter__btn--abs\" onClick={() => this.props[el.methodEnd]('')}>\r\n                                    <svg className=\"Filter__icon Filter__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                </button>\r\n                            </label>\r\n                        </div>\r\n                    </li>\r\n                )\r\n            });\r\n        } else return <h1>404 Not found!</h1>;\r\n\r\n        return (\r\n            <section className=\"Filter\">\r\n                <div className=\"container\">\r\n                    <div className=\"Filter__wrapper\">\r\n                        <div className=\"Filter__list Filter__list--headline\">\r\n                            <h3 className=\"heading heading__3 Filter__heading\">Filters</h3>\r\n                            <div className=\"Filter__group\">\r\n                                {/* <button className=\"Filter__btn\" onClick={() => this.onChangeCardView()}>\r\n                                    <svg className=\"Filter__icon\" dangerouslySetInnerHTML={{__html: utils.use('grid')}} />\r\n                                </button>\r\n                                <button className=\"Filter__btn\" onClick={() => this.onChangeCardView(true)}>\r\n                                    <svg className=\"Filter__icon\" dangerouslySetInnerHTML={{__html: utils.use('list')}} />\r\n                                </button> */}\r\n                                <button className=\"Filter__btn\" onClick={() => this.props.onClearFilter()}>\r\n                                    <svg className=\"Filter__icon\" dangerouslySetInnerHTML={{__html: utils.use('trash-2')}} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <ul className=\"Filter__list Filter__list--midline\">\r\n                            <li className=\"Filter__item\">\r\n                                <p className=\"Filter__title\">Price</p>\r\n                                <div className=\"Filter__group\">\r\n                                    <label className=\"Filter__label\">\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"Filter__input Filter__input--small input\" \r\n                                            placeholder=\"from\" \r\n                                            onChange={(e) => this.props.onFilterByPriceStart(e.target.value)} \r\n                                            value={this.props.price.from} />\r\n                                        <button className=\"Filter__btn Filter__btn--abs\" onClick={() => this.props.onFilterByPriceStart('')}>\r\n                                            <svg className=\"Filter__icon Filter__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                        </button>\r\n                                    </label>\r\n                                    <label className=\"Filter__label\">\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"Filter__input Filter__input--small Filter__input--border  input\" \r\n                                            placeholder=\"to\" \r\n                                            onChange={(e) => this.props.onFilterByPriceEnd(e.target.value)} \r\n                                            value={this.props.price.to} />\r\n                                        <button className=\"Filter__btn Filter__btn--abs\" onClick={() => this.props.onFilterByPriceEnd('')}>\r\n                                            <svg className=\"Filter__icon Filter__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                        </button>\r\n                                    </label>\r\n                                </div>\r\n                            </li>\r\n                            {counters}\r\n                            {subCatItems}\r\n                            <li className=\"Filter__item\">\r\n                                <p className=\"Filter__title\">Sort by</p>\r\n                                <div className=\"Filter__input input\">\r\n                                    {utils.capitalize(this.props.sort)}\r\n                                    <svg className=\"Filter__icon Filter__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                    <Dropdown class=\"Dropdown--full Dropdown--sm-s\">\r\n                                        <div className=\"Filter__dropitem\" onClick={() => this.props.onSortBy('Date')}>Date</div>\r\n                                        <div className=\"Filter__dropitem\" onClick={() => this.props.onSortBy('Most expensive')}>Most expensive</div>\r\n                                        <div className=\"Filter__dropitem\" onClick={() => this.props.onSortBy('Cheapest')}>Cheapest</div>\r\n                                    </Dropdown>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"Filter__list Filter__list--headline Filter__list--bottomline\">\r\n                            <ul className=\"Filter__group\">\r\n                                <li className=\"tag tag__types\">\r\n                                    <a href=\"#\" className=\"Filter__link Filter__link--tags\">Lalaku</a>\r\n                                </li>\r\n                                <li className=\"tag tag__types\">\r\n                                    <a href=\"#\" className=\"Filter__link Filter__link--tags\">Baby jackets</a>\r\n                                </li>\r\n                                <li className=\"tag tag__types\">\r\n                                    <a href=\"#\" className=\"Filter__link Filter__link--tags\">Baby Jeans</a>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"Filter__group\">\r\n                                <Link to=\"/\" className=\"Filter__link\">Home</Link>\r\n                                <span className=\"Filter__link\">&bull;</span>\r\n                                <Link to={'/' + this.category} className=\"Filter__link\">{utils.formatRouteString(this.category)}</Link>\r\n                                <span className=\"Filter__link\">&bull;</span>\r\n                                <span className=\"Filter__link\">{utils.formatRouteString(this.subCategory)}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        condition: state.filters.condition,\r\n        type: state.filters.type,\r\n        price: state.filters.price,\r\n        size: state.filters.size,\r\n        sort: state.filters.sort,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFilterByPriceStart: (val) => dispatch(actions.filterByPriceStart(val)),\r\n        onFilterByPriceEnd: (val) => dispatch(actions.filterByPriceEnd(val)),\r\n        onFilterBySizeStart: (val) => dispatch(actions.filterBySizeStart(val)),\r\n        onFilterBySizeEnd: (val) => dispatch(actions.filterBySizeEnd(val)),\r\n        onFilterByCondition: (val) => dispatch(actions.filterByCondition(val)),\r\n        onFilterByType: (val) => dispatch(actions.filterByType(val)),\r\n        onSortBy: (val) => dispatch(actions.sortBy(val)),\r\n        onChangeCardView: (val) => dispatch(actions.changeCardView(val)),\r\n        onClearFilter: () => dispatch(actions.clearFiler())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filter));","E:\\dec-exp\\src\\store\\reducers\\reducer_data.js",[],"E:\\dec-exp\\src\\store\\Filters\\for_kids.js",[],"E:\\dec-exp\\src\\store\\Categories\\categories.js",[],"E:\\dec-exp\\src\\store\\actions\\actions_location.js",[],"E:\\dec-exp\\src\\store\\reducers\\reducer__filter.js",[],"E:\\dec-exp\\src\\store\\actions\\actions_filter.js",[],"E:\\dec-exp\\src\\store\\actions\\actions_data.js",[],"E:\\dec-exp\\src\\utilities\\utilities.js",[],"E:\\dec-exp\\src\\components\\Tooltip\\Tooltip.js",[],"E:\\dec-exp\\src\\containers\\Adview\\Adview.js",["197","198","199"],"import React, { Component, PureComponent } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { SwiperSlide, Swiper } from 'swiper/react';\r\nimport SwiperCore, { Scrollbar, Mousewheel, Pagination, Navigation } from 'swiper';\r\nimport Rating from 'react-rating';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport ShadowScrollbars from '../../components/ShadowComponent/ShadowComponent';\r\n\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport * as utils from '../../utilities/utilities';\r\n\r\nimport avatar from '../../assets/images/32.jpg';\r\nimport './Adview.scss';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Tooltip from '../../components/Tooltip/Tooltip';\r\n\r\nSwiperCore.use([Scrollbar, Mousewheel, Pagination, Navigation]);\r\n\r\nclass Adview extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            index: null,\r\n            rating: 4.5,\r\n            showNum: false,\r\n            showMessageBar: false,\r\n            rotate: null,\r\n            message: '',\r\n            fullScreen: false,\r\n            swiperBegin: true,\r\n            swiperEnd: false,\r\n            activeSwiperImage: 0\r\n        }\r\n        this.categoryPath = `${this.props.match.params.category}/${this.props.match.params.subcategory}`;\r\n        this.id = this.props.match.params.id;\r\n\r\n        this.copyNumRef = React.createRef();\r\n        this.mesTitleRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Initial id: ' + this.id);\r\n        const index = this.props.data.findIndex(el => el.id === this.id);\r\n        if (index === -1) {\r\n            console.log('No such ad exists');\r\n        } else this.setState({ index }, () => console.log('Find index by id: ' + this.state.index));\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.swiper.update();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.swiper.destroy();\r\n    }\r\n\r\n    onNextImage = (img) => {\r\n        if (this.state.activeSwiperImage < img.length - 1) {\r\n            this.setState((prevState) => {\r\n                return { activeSwiperImage: prevState.activeSwiperImage + 1 }\r\n            })\r\n        } else this.setState({ activeSwiperImage: 0 });\r\n    }\r\n\r\n    onPrevImage = () => {\r\n        if (this.state.activeSwiperImage > 0) {\r\n            this.setState((prevState) => {\r\n                return { activeSwiperImage: prevState.activeSwiperImage - 1 }\r\n            })\r\n        }\r\n    }\r\n\r\n    onGoFullScreen = () => this.setState({ fullScreen: true });\r\n    onCloseFullScreen = () => this.setState({ fullScreen: false });\r\n\r\n    onReachBeginSwiper = () => this.setState({ swiperBegin: true, swiperEnd: false }, () => console.log(this.state.swiperBegin, this.state.swiperEnd));\r\n    onReachEndSwiper = () => this.setState({ swiperBegin: false, swiperEnd: true }, () => console.log(this.state.swiperBegin, this.state.swiperEnd));\r\n\r\n    onRotate = () => {\r\n        let i = 0;\r\n        const degrees = [90, 180, 360];\r\n        if (this.state.rotate) {\r\n            i = degrees.findIndex(el => el === this.state.rotate) + 1;\r\n        }\r\n        if (i > degrees.length - 1) i = 0;\r\n        this.setState({ rotate: degrees[i] });\r\n    }\r\n\r\n    onEnterMessage = (e) => {\r\n        this.setState({ message: e.target.value });\r\n    }\r\n\r\n    onSendMessage = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.message) {\r\n            this.mesTitleRef.current.textContent = 'Your message is sent!';\r\n            setTimeout(() => {\r\n                this.mesTitleRef.current.textContent = 'Write your message...';\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onShowNumber = () => {\r\n        this.setState({ showNum: true });\r\n    }\r\n\r\n    closePopup = () => {\r\n        this.props.history.replace('/' + this.categoryPath);\r\n    }\r\n\r\n    onShowMessageBar = () => this.setState({ showMessageBar: true });\r\n    onHideMessageBar = () => this.setState({ showMessageBar: false });\r\n\r\n    onCopyNum = (val) => {\r\n        const el = document.createElement('textarea');\r\n        el.value = val;\r\n        el.style.position = 'absolute';\r\n        el.style.left = '-9999px';\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        el.setSelectionRange(0, 99999);\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    onHideNum = () => this.setState({ showNum: false });\r\n    \r\n    onClickNext = () => {\r\n        if (this.state.index < this.props.data.length - 1) {\r\n            this.setState(prevState => {\r\n                return { index: prevState.index + 1 }\r\n            }, () => {\r\n                this.props.history.replace(`/${this.categoryPath}/${this.props.data[this.state.index].id}`);\r\n            });\r\n        }\r\n        else this.props.history.replace(`/${this.categoryPath}`);\r\n        if (this.state.activeSwiperImage > 0) this.setState({ activeSwiperImage: 0 });\r\n    }\r\n    \r\n    onClickPrev = () => {\r\n        if (this.state.index > 0) {\r\n            this.setState(prevState => {\r\n                return { index: prevState.index - 1 }\r\n            }, () => {\r\n                this.props.history.replace(`/${this.props.match.params.category}/${this.props.match.params.subcategory}/${this.props.data[this.state.index].id}`);\r\n            });\r\n        }\r\n        else this.props.history.replace(`/${this.categoryPath}`);\r\n        if (this.state.activeSwiperImage > 0) this.setState({ activeSwiperImage: 0 });\r\n    }\r\n\r\n    render() {\r\n        const category = `/${this.props.match.params.category}`;\r\n        const subcategory = this.props.match.params.subcategory;\r\n\r\n        let rotateDegClass = '';\r\n        if (this.state.rotate) rotateDegClass = `Adview__rotate--${this.state.rotate}`;\r\n\r\n        const topGradientClass = ['Adview__gradient Adview__gradient--top'];\r\n        const bottomGradientClass = ['Adview__gradient'];\r\n        if (this.state.swiperEnd) topGradientClass.push('Adview__gradient--show');\r\n        if (this.state.swiperBegin) bottomGradientClass.push('Adview__gradient--show');\r\n        \r\n        const ad = this.props.data[this.state.index];\r\n        if (!ad) return null;\r\n\r\n        const images = ad.img.map((el, i) => (\r\n            <SwiperSlide className={`Adview__figmain ${rotateDegClass}`} key={i}>\r\n                <LazyLoadImage \r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    className=\"Adview__img\"\r\n                    src={el}\r\n                    alt={i}\r\n                    />\r\n            </SwiperSlide>\r\n        ));\r\n\r\n        const adsFrom = this.props.data.map((el, i) => {\r\n            return (\r\n                <Link to=\"/\" className=\"Adview__card Adview__box Adview__box--card\" key={i}>\r\n                    <figure className=\"Adview__figure Adview__figure--card mr-2\">\r\n                        <LazyLoadImage \r\n                            className=\"Adview__img Adview__img--card\"\r\n                            src={el.img[0]}\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                            />\r\n                    </figure>\r\n                    <div className=\"Adview__group Adview__group--col w-max afs\">\r\n                        <span className=\"Adview__subheading Adview__subheading--card mb-1\">{el.title}</span>\r\n                        <span className=\"Adview__title mb-5\">{el.date}</span>\r\n                        <span className=\"Adview__title mb-5\">{el.location}</span>\r\n                        <span className=\"price-tag\">{el.price}</span>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        })\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <header className=\"Adview\">\r\n                    <Backdrop click={this.closePopup} z={14}/>\r\n                        {this.state.fullScreen && \r\n                            <div className=\"Adview__fullscreen\">\r\n                                <div className=\"container\">\r\n                                    <Backdrop z={1} click={this.onCloseFullScreen} />\r\n                                    <div className=\"Adview__fullscreenwrap\">\r\n                                        <figure className=\"Adview__figure Adview__figure--full\">\r\n                                            <img src={ad.img[this.state.activeSwiperImage]} alt={ad.title} className=\"Adview__img Adview__img--full\" />\r\n                                        </figure>\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"Adview__btn Adview__btn--abs Adview__btn--grey Adview__btn--left\" onClick={() => this.onPrevImage()}>\r\n                                    <svg className=\"Adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-left')}} />\r\n                                </button>\r\n                                <button className=\"Adview__btn Adview__btn--abs Adview__btn--grey Adview__btn--right\" onClick={() => this.onNextImage(ad.img)}>\r\n                                    <svg className=\"Adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                        <Swiper \r\n                            className=\"Adview__wrapper\"\r\n                            direction=\"vertical\"\r\n                            slidesPerView=\"auto\"\r\n                            freeMode\r\n                            scrollbar={{ el: '#scrollbar', draggable: true, snapOnRelease: false }}\r\n                            onSetTransition={(sw, tr) => console.log(tr)}\r\n                            mousewheel\r\n                            simulateTouch={false}\r\n                            keyboard={{ enabled: true, onlyInViewport: true }}>\r\n                            <SwiperSlide className=\"Adview__content\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"Adview__head\">\r\n                                        <div className=\"Adview__group\">\r\n                                            <Link to=\"/\" className=\"Adview__btn Adview__btn--rel Adview__btn--bggrey Adview__btn--routes DTool pos-rel wh-auto\">Home</Link>\r\n                                            <Link to={category} className=\"Adview__btn Adview__btn--rel Adview__btn--bggrey Adview__btn--routes DTool pos-rel wh-auto\">{utils.capitalize(utils.parseUrl(utils.formatRouteString(category)))}</Link>\r\n                                            <Link to={`${category}/${subcategory}`} className=\"Adview__btn Adview__btn--rel Adview__btn--bggrey Adview__btn--routes DTool pos-rel wh-auto\">{utils.capitalize(utils.parseUrl(utils.formatRouteString(subcategory)))}</Link>\r\n                                            <span className=\"Adview__btn Adview__btn--rel Adview__btn--bggrey Adview__btn--routes DTool pos-rel wh-auto\">{ad.title}</span>\r\n                                        </div>\r\n                                        <div className=\"Adview__group\">\r\n                                            <button className=\"Adview__btn Adview__btn--rel Adview__btn--bggrey Adview__btn--routes DTool pos-rel wh-auto\" onClick={() => this.onClickPrev()}>\r\n                                                <svg className=\"Adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-left')}} />\r\n                                                Previous Ad\r\n                                            </button>\r\n                                            <button className=\"Adview__btn Adview__btn--rel Adview__btn--bggrey Adview__btn--routes DTool pos-rel wh-auto\" onClick={() => this.onClickNext()}>\r\n                                                Next Ad\r\n                                                <svg className=\"Adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                            </button>\r\n                                            <button className=\"Adview__btn Adview__btn--rel Adview__btn--bggrey DTool pos-rel DTool DTool--bottom no-transition\" onClick={() => this.closePopup()}>\r\n                                                <svg className=\"Adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                                <Tooltip>Close</Tooltip>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"Adview__main\">\r\n                                        <div className=\"Adview__left\">\r\n                                            <div className=\"Adview__box Adview__box--main\">\r\n                                                <Swiper \r\n                                                    className=\"Adview__swiper\"\r\n                                                    slidesPerView={1}\r\n                                                    navigation={{nextEl: '#right', prevEl: '#left', disabledClass: 'Adview__btn--disabled'}}\r\n                                                    pagination={{ el: '.swiper-pagination' }}\r\n                                                    onSwiper={(sw) => this.swiper = sw}\r\n                                                    simulateTouch={false}\r\n                                                    preloadImages\r\n                                                    updateOnImagesReady\r\n                                                    onImagesReady={() => this.swiper.update()}\r\n                                                    onSlideChange={(sw) => this.setState({ activeSwiperImage: sw.activeIndex })}\r\n                                                    preventInteractionOnTransition={true}>\r\n                                                    {images}\r\n                                                    <button className=\"Adview__btn Adview__btn--abs Adview__btn--left\" id=\"left\">\r\n                                                        <svg className=\"Adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-left')}} />\r\n                                                    </button>\r\n                                                    <button className=\"Adview__btn Adview__btn--abs Adview__btn--right\" id=\"right\">\r\n                                                        <svg className=\"Adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                                    </button>\r\n                                                    <div className=\"Adview__group Adview__group--abs\">\r\n                                                        <button className=\"Adview__btn DTool Adview__btn--rel Adview__btn--abs Adview__btn--corner mr-2 pos-rel no-transition\" onClick={() => this.onRotate()}>\r\n                                                            <svg className=\"Adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('rotate-cw')}} />\r\n                                                            <Tooltip>Rotate the photo</Tooltip>\r\n                                                        </button>\r\n                                                        <button className=\"Adview__btn DTool Adview__btn--rel Adview__btn--abs Adview__btn--corner pos-rel no-transition\" onClick={() => this.onGoFullScreen()}>\r\n                                                            <svg className=\"Adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('maximize')}} />\r\n                                                            <Tooltip>Full Screen</Tooltip>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div className=\"swiper-pagination\"></div>\r\n                                                </Swiper>\r\n                                                <div className=\"Adview__details mb-2\">\r\n                                                    <div className=\"Adview__group sb\">\r\n                                                        <div className=\"Adview__headingwrap\">\r\n                                                            <h1 className=\"heading heading__1 Adview__heading\" data-premium={ad.premium}>\r\n                                                                {ad.title}\r\n                                                                <span className=\"badge ml-1\">\r\n                                                                    Promoted\r\n                                                                </span>\r\n                                                            </h1>\r\n                                                            <div className=\"Adview__subheading mb-1\">\r\n                                                                <p className=\"Adview__item Adview__item--location\">{ad.date}, {ad.location}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"Adview__group sb afe\">\r\n                                                        <div>\r\n                                                            <p className=\"price-tag Adview__item Adview__item--price\">{ad.price}</p>\r\n                                                        </div>\r\n                                                        <div className=\"Adview__group\">\r\n                                                            <button className=\"Adview__btn Adview__btn--rel DTool pos-rel no-transition\">\r\n                                                                <svg className=\"Adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('share')}} />\r\n                                                                <Tooltip>Share</Tooltip>\r\n                                                            </button>\r\n                                                            <button className=\"Adview__btn Adview__btn--rel DTool pos-rel no-transition\" data-favorite={ad.favorite}>\r\n                                                                <svg className=\"Adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('heart')}} />\r\n                                                                <Tooltip>{!ad.favorite ? 'Add to favourites' : 'Remove from favorites'}</Tooltip>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"Adview__box Adview__box--description\">\r\n                                                <div className=\"Adview__subhead sb mb-2\">\r\n                                                    <h2 className=\"heading heading__2 Adview__subheading\">Description</h2>\r\n                                                    <p className=\"Adview__title\">Number of views: 153&nbsp;&nbsp;|&nbsp;&nbsp;Edited at 13:16</p>\r\n                                                </div>\r\n                                                <div className=\"Adview__group Adview__group--col afs mb-1\">\r\n                                                    <p className=\"Adview__title Adview__title--mid mb-1\">Secifications:</p>\r\n                                                    <ul className=\"Adview__group Adview__group--wrap\">\r\n                                                        <li className=\"tag tag__types mb-1\">Camera: 100MP</li>\r\n                                                        <li className=\"tag tag__types mb-1\">CPU: Snapdragon 865</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Battery: 5000mAh</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Condition: New</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Color: Grey</li>\r\n                                                        <li className=\"tag tag__types mb-1\">ROM: 128GB</li>\r\n                                                        <li className=\"tag tag__types mb-1\">RAM: 8GB</li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                                <div className=\"Adview__group Adview__group--col afs\">\r\n                                                    <p className=\"Adview__title Adview__title--mid mb-1\">Personalized description:</p>\r\n                                                    <p className=\"Adview__text\">\r\n                                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras viverra odio vel risus consequat feugiat. Vivamus nec lorem auctor felis suscipit ullamcorper sit amet non orci. Sed ornare justo eu arcu convallis venenatis. Sed luctus maximus viverra. Nullam sit amet urna fermentum, dignissim urna semper, auctor mi. Mauris pulvinar porta augue, sodales ultricies urna placerat vitae. \r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"Adview__right\">\r\n                                            <div className=\"Adview__box Adview__box--user\">\r\n                                                <figure className=\"Adview__figure Adview__item\">\r\n                                                    <img className=\"Adview__img\" src={avatar} alt={ad.id} />\r\n                                                </figure>\r\n                                                <Link to=\"/user/john_doe\" className=\"Adview__item Adview__item--name anim-link pos-rel no-transition\">John Doe</Link>\r\n                                                <span className=\"Adview__item Adview__item--titled\">\r\n                                                    <span className=\"Adview__title mb-5\">Enterprise</span>\r\n                                                    <Link to=\"/company\" className=\"Adview__item Adview__item--lined\">Intech Ltd.</Link>\r\n                                                </span>\r\n                                                <span className=\"Adview__item Adview__item--titled\">\r\n                                                    <span className=\"Adview__title mb-5\">Reviews:</span> \r\n                                                    <span className=\"Adview__item\">\r\n                                                        <Rating \r\n                                                            className=\"Adview__item--ratingbar\"\r\n                                                            initialRating={this.state.rating} \r\n                                                            fractions={2} \r\n                                                            emptySymbol={ <svg className=\"rating\" dangerouslySetInnerHTML={{__html: utils.useStars('star-empty')}} /> }\r\n                                                            fullSymbol={ <svg className=\"rating rating--fill\" dangerouslySetInnerHTML={{__html: utils.useStars('star-full')}} /> }\r\n                                                            onChange={(r) => this.setState({ rating: r })}\r\n                                                            />\r\n                                                        <span>{(Math.round(this.state.rating * 100) / 100).toFixed(1)}</span>\r\n                                                    </span>\r\n                                                </span>\r\n                                                <div className=\"Adview__item pos-rel no-transition\">\r\n                                                    <button className=\"Adview__btn--main btn btn__primary\" onClick={() => this.onShowNumber()}>\r\n                                                        Phone number\r\n                                                        <svg className=\"Adview__icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('phone-outgoing')}} />\r\n                                                    </button>\r\n                                                    {this.state.showNum && \r\n                                                        <React.Fragment>\r\n                                                            <Backdrop z={98} click={this.onHideNum} />\r\n                                                            <Tooltip class=\"Adview__numbox\" click={this.onHideNum}>\r\n                                                                <span className=\"Adview__number\">+684 655985 2656</span>\r\n                                                                <button className=\"Adview__btn Adview__btn--clip ml-1\" onClick={() => this.onCopyNum('+684 655985 2656')} title=\"Copy number\">\r\n                                                                    <svg className=\"Adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('clipboard')}} />\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                        </React.Fragment>\r\n                                                    }\r\n                                                </div>\r\n                                                <button className=\"Adview__btn--main Adview__item btn btn__secondary\" onClick={() => this.onShowMessageBar()}>\r\n                                                    Write a message\r\n                                                    <svg className=\"Adview__icon icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('edit-2')}} />\r\n                                                </button>\r\n                                            </div>\r\n                                            {this.state.showMessageBar && \r\n                                                <div className=\"Adview__box Adview__box--message\">\r\n                                                    <div className=\"Adview__group Adview__group--sb mb-1\">\r\n                                                        <p className=\"Adview__title Adview__title--big\" ref={this.mesTitleRef}>Write your message:</p>\r\n                                                        <button className=\"Adview__btn Adview__btn--sm Adview__btn--rel pos-rel\" onClick={() => this.onHideMessageBar()}>\r\n                                                            <svg className=\"Adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <form className=\"Adview__form\" onSubmit={(e) => this.onSendMessage(e)}>\r\n                                                        <textarea autoFocus required className=\"Adview__input mr-5\" placeholder=\"Message...\" type=\"text\" onChange={(e) => this.onEnterMessage(e)} value={this.state.message} />\r\n                                                        <button className=\"Adview__btn wh-auto btn btn__primary btn__primary--outline\">\r\n                                                            Send\r\n                                                            <svg className=\"Adview__icon icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('send')}} />\r\n                                                        </button>\r\n                                                    </form>\r\n                                                </div>\r\n                                            }\r\n                                            <Swiper\r\n                                                className=\"Adview__cardscontainer\"\r\n                                                direction=\"vertical\"\r\n                                                slidesPerView=\"auto\"\r\n                                                freeMode\r\n                                                mousewheel\r\n                                                nested\r\n                                                simulateTouch={false}\r\n                                                keyboard={{ enabled: true, onlyInViewport: true }}\r\n                                                onReachBeginning={() => this.onReachBeginSwiper()}\r\n                                                onReachEnd={() => this.onReachEndSwiper()}\r\n                                                scrollbar={{ el: '#scrollbar-2', draggable: true, snapOnRelease: false }}\r\n                                                >\r\n                                                <span className={topGradientClass.join(' ')}></span>\r\n                                                <span className={bottomGradientClass.join(' ')}></span>\r\n                                                <SwiperSlide className=\"Adview__cards\">\r\n                                                    {adsFrom}\r\n                                                    <button className=\"Adview__card Adview__card--btn\">See all</button>\r\n                                                </SwiperSlide>\r\n                                                <div className=\"swiper-scrollbar\" id=\"scrollbar-2\"></div>\r\n                                            </Swiper>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                        <div className=\"swiper-scrollbar\" id=\"scrollbar\"></div>\r\n                    </Swiper>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Adview);\r\n\r\n\r\n// var rgb = getAverageRGB(document.getElementById('i'));\r\n// document.body.style.backgroundColor = 'rgb('+rgb.r+','+rgb.g+','+rgb.b+')';\r\n\r\n// function getAverageRGB(imgEl) {\r\n\r\n// var blockSize = 5, // only visit every 5 pixels\r\n//     defaultRGB = {r:0,g:0,b:0}, // for non-supporting envs\r\n//     canvas = document.createElement('canvas'),\r\n//     context = canvas.getContext && canvas.getContext('2d'),\r\n//     data, width, height,\r\n//     i = -4,\r\n//     length,\r\n//     rgb = {r:0,g:0,b:0},\r\n//     count = 0;\r\n    \r\n// if (!context) {\r\n//     return defaultRGB;\r\n// }\r\n\r\n// height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;\r\n// width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;\r\n\r\n// context.drawImage(imgEl, 0, 0);\r\n\r\n// try {\r\n//     data = context.getImageData(0, 0, width, height);\r\n// } catch(e) {\r\n//     /* security error, img on diff domain */alert('x');\r\n//     return defaultRGB;\r\n// }\r\n\r\n// length = data.data.length;\r\n\r\n// while ( (i += blockSize * 4) < length ) {\r\n//     ++count;\r\n//     rgb.r += data.data[i];\r\n//     rgb.g += data.data[i+1];\r\n//     rgb.b += data.data[i+2];\r\n// }\r\n\r\n// // ~~ used to floor values\r\n// rgb.r = ~~(rgb.r/count);\r\n// rgb.g = ~~(rgb.g/count);\r\n// rgb.b = ~~(rgb.b/count);\r\n\r\n// return rgb;\r\n\r\n// }","E:\\dec-exp\\src\\containers\\Main\\Main.js",[],"E:\\dec-exp\\src\\components\\ShadowComponent\\ShadowComponent.js",[],"E:\\dec-exp\\src\\store\\Filters\\real_estate.js",[],"E:\\dec-exp\\src\\store\\Filters\\electronics.js",[],"E:\\dec-exp\\src\\store\\Filters\\transport_auto.js",[],"E:\\dec-exp\\src\\store\\Filters\\jobs.js",[],"E:\\dec-exp\\src\\store\\Filters\\pets.js",[],"E:\\dec-exp\\src\\store\\Filters\\home_and_garden.js",[],"E:\\dec-exp\\src\\store\\Filters\\business_and_services.js",[],"E:\\dec-exp\\src\\store\\Filters\\fashion_and_style.js",[],"E:\\dec-exp\\src\\store\\Filters\\sports_hobby_and_comfort.js",[],{"ruleId":"200","severity":1,"message":"201","line":5,"column":25,"nodeType":"202","messageId":"203","endLine":5,"endColumn":35},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":54,"column":25,"nodeType":"210","endLine":54,"endColumn":64},{"ruleId":"208","severity":1,"message":"209","line":59,"column":25,"nodeType":"210","endLine":59,"endColumn":88},{"ruleId":"208","severity":1,"message":"209","line":70,"column":25,"nodeType":"210","endLine":70,"endColumn":64},{"ruleId":"208","severity":1,"message":"209","line":78,"column":25,"nodeType":"210","endLine":78,"endColumn":64},{"ruleId":"208","severity":1,"message":"209","line":84,"column":25,"nodeType":"210","endLine":84,"endColumn":64},{"ruleId":"211","severity":1,"message":"212","line":34,"column":21,"nodeType":"210","endLine":34,"endColumn":64},{"ruleId":"200","severity":1,"message":"213","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"214","line":3,"column":18,"nodeType":"202","messageId":"203","endLine":3,"endColumn":29},{"ruleId":"208","severity":1,"message":"209","line":18,"column":17,"nodeType":"210","endLine":18,"endColumn":54},{"ruleId":"200","severity":1,"message":"215","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"216","line":9,"column":8,"nodeType":"202","messageId":"203","endLine":9,"endColumn":14},{"ruleId":"200","severity":1,"message":"217","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":27},{"ruleId":"208","severity":1,"message":"209","line":174,"column":37,"nodeType":"210","endLine":174,"endColumn":93},{"ruleId":"208","severity":1,"message":"209","line":177,"column":37,"nodeType":"210","endLine":177,"endColumn":93},{"ruleId":"208","severity":1,"message":"209","line":180,"column":37,"nodeType":"210","endLine":180,"endColumn":93},{"ruleId":"200","severity":1,"message":"218","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"219","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":18},{"ruleId":"200","severity":1,"message":"220","line":8,"column":8,"nodeType":"202","messageId":"203","endLine":8,"endColumn":24},"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["221"],"no-negated-in-lhs",["222"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Swiper' is defined but never used.","'SwiperSlide' is defined but never used.","'Dropdown' is defined but never used.","'sprite' is defined but never used.","'LazyLoadComponent' is defined but never used.","'Component' is defined but never used.","'Scrollbars' is defined but never used.","'ShadowScrollbars' is defined but never used.","no-global-assign","no-unsafe-negation"]