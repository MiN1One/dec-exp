[{"E:\\dec-exp\\src\\index.js":"1","E:\\dec-exp\\src\\reportWebVitals.js":"2","E:\\dec-exp\\src\\containers\\App.js":"3","E:\\dec-exp\\src\\store\\reducers\\reducer_location.js":"4","E:\\dec-exp\\src\\store\\actions\\actionTypes.js":"5","E:\\dec-exp\\src\\store\\actions\\index.js":"6","E:\\dec-exp\\src\\hoc\\asyncComponent\\asyncComponent.js":"7","E:\\dec-exp\\src\\store\\reducers\\reducer_data.js":"8","E:\\dec-exp\\src\\store\\Filters\\for_kids.js":"9","E:\\dec-exp\\src\\store\\Categories\\categories.js":"10","E:\\dec-exp\\src\\store\\actions\\actions_location.js":"11","E:\\dec-exp\\src\\store\\actions\\actions_filter.js":"12","E:\\dec-exp\\src\\store\\actions\\actions_data.js":"13","E:\\dec-exp\\src\\utilities\\utilities.js":"14","E:\\dec-exp\\src\\store\\Filters\\real_estate.js":"15","E:\\dec-exp\\src\\store\\Filters\\electronics.js":"16","E:\\dec-exp\\src\\store\\Filters\\transport_auto.js":"17","E:\\dec-exp\\src\\store\\Filters\\jobs.js":"18","E:\\dec-exp\\src\\store\\Filters\\pets.js":"19","E:\\dec-exp\\src\\store\\Filters\\home_and_garden.js":"20","E:\\dec-exp\\src\\store\\Filters\\business_and_services.js":"21","E:\\dec-exp\\src\\store\\Filters\\fashion_and_style.js":"22","E:\\dec-exp\\src\\store\\Filters\\sports_hobby_and_comfort.js":"23","E:\\dec-exp\\src\\components\\Dropdown.js":"24","E:\\dec-exp\\src\\containers\\Main.js":"25","E:\\dec-exp\\src\\containers\\Layout.js":"26","E:\\dec-exp\\src\\components\\Filter.js":"27","E:\\dec-exp\\src\\containers\\Header.js":"28","E:\\dec-exp\\src\\components\\Searchbar.js":"29","E:\\dec-exp\\src\\containers\\AuthSignup.js":"30","E:\\dec-exp\\src\\containers\\AuthSignin.js":"31","E:\\dec-exp\\src\\containers\\ResetPass.js":"32","E:\\dec-exp\\src\\components\\Logo.js":"33","E:\\dec-exp\\src\\components\\Categories.js":"34","E:\\dec-exp\\src\\components\\Card.js":"35","E:\\dec-exp\\src\\containers\\Footer.js":"36","E:\\dec-exp\\src\\components\\Adview.js":"37","E:\\dec-exp\\src\\components\\Language.js":"38","E:\\dec-exp\\src\\UI\\LoadingScreen.js":"39","E:\\dec-exp\\src\\UI\\Backdrop.js":"40","E:\\dec-exp\\src\\UI\\Tooltip.js":"41","E:\\dec-exp\\src\\containers\\Navigation.js":"42","E:\\dec-exp\\src\\containers\\Post.js":"43","E:\\dec-exp\\src\\store\\reducers\\reducer_filter.js":"44"},{"size":1242,"mtime":1610007425111,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"46"},{"size":1473,"mtime":1609920029058,"results":"48","hashOfConfig":"46"},{"size":764,"mtime":1608902289310,"results":"49","hashOfConfig":"46"},{"size":652,"mtime":1609096193849,"results":"50","hashOfConfig":"46"},{"size":393,"mtime":1609096213510,"results":"51","hashOfConfig":"46"},{"size":659,"mtime":1610012230241,"results":"52","hashOfConfig":"46"},{"size":4191,"mtime":1609830914900,"results":"53","hashOfConfig":"46"},{"size":3405,"mtime":1609075991734,"results":"54","hashOfConfig":"46"},{"size":3250,"mtime":1609601375057,"results":"55","hashOfConfig":"46"},{"size":439,"mtime":1609047572479,"results":"56","hashOfConfig":"46"},{"size":1238,"mtime":1609096193850,"results":"57","hashOfConfig":"46"},{"size":183,"mtime":1609047579103,"results":"58","hashOfConfig":"46"},{"size":1207,"mtime":1610019084716,"results":"59","hashOfConfig":"46"},{"size":2356,"mtime":1609596536223,"results":"60","hashOfConfig":"46"},{"size":4249,"mtime":1609596531693,"results":"61","hashOfConfig":"46"},{"size":5380,"mtime":1609603465025,"results":"62","hashOfConfig":"46"},{"size":8355,"mtime":1609604336547,"results":"63","hashOfConfig":"46"},{"size":4461,"mtime":1609604503152,"results":"64","hashOfConfig":"46"},{"size":5418,"mtime":1609600187483,"results":"65","hashOfConfig":"46"},{"size":7814,"mtime":1609604695223,"results":"66","hashOfConfig":"46"},{"size":3486,"mtime":1609601531710,"results":"67","hashOfConfig":"46"},{"size":3164,"mtime":1609604800538,"results":"68","hashOfConfig":"46"},{"size":167,"mtime":1609686174493,"results":"69","hashOfConfig":"46"},{"size":2575,"mtime":1609860712837,"results":"70","hashOfConfig":"46"},{"size":372,"mtime":1609860687927,"results":"71","hashOfConfig":"46"},{"size":12751,"mtime":1609833609966,"results":"72","hashOfConfig":"46"},{"size":4662,"mtime":1609860881723,"results":"73","hashOfConfig":"46"},{"size":4426,"mtime":1610038191742,"results":"74","hashOfConfig":"46"},{"size":9113,"mtime":1610001401380,"results":"75","hashOfConfig":"46"},{"size":6405,"mtime":1609999163880,"results":"76","hashOfConfig":"46"},{"size":7765,"mtime":1609831679609,"results":"77","hashOfConfig":"46"},{"size":372,"mtime":1609686873927,"results":"78","hashOfConfig":"46"},{"size":5945,"mtime":1609685886488,"results":"79","hashOfConfig":"46"},{"size":1773,"mtime":1609685886488,"results":"80","hashOfConfig":"46"},{"size":2272,"mtime":1609948916644,"results":"81","hashOfConfig":"46"},{"size":31681,"mtime":1609865299763,"results":"82","hashOfConfig":"46"},{"size":1537,"mtime":1609948591017,"results":"83","hashOfConfig":"46"},{"size":815,"mtime":1609685557290,"results":"84","hashOfConfig":"46"},{"size":218,"mtime":1609688274160,"results":"85","hashOfConfig":"46"},{"size":248,"mtime":1609685576895,"results":"86","hashOfConfig":"46"},{"size":8279,"mtime":1610006384303,"results":"87","hashOfConfig":"46"},{"size":32190,"mtime":1610046990285,"results":"88","hashOfConfig":"46"},{"size":2396,"mtime":1610007417156,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ta4lz8",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\dec-exp\\src\\index.js",["186"],"E:\\dec-exp\\src\\reportWebVitals.js",[],["187","188"],"E:\\dec-exp\\src\\containers\\App.js",["189"],"import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Main from './Main';\nimport Header from './Header';\nimport asyncComponent from '../hoc/asyncComponent/asyncComponent';\nimport Layout from './Layout';\nimport Post from './Post';\n\nconst AsyncAuthSignin = asyncComponent(() => import('./AuthSignin'));\nconst AsyncAuthSignup = asyncComponent(() => import('./AuthSignup'));\nconst AsyncResetPass = asyncComponent(() => import('./ResetPass'));\nconst AsyncPost = asyncComponent(() => import('./Post'));\n\nfunction App() {\n  const header = (\n    <Layout>\n      <Header />\n    </Layout>\n  );\n\n  const main = (\n    <Layout>\n      <Main />\n    </Layout>\n  );\n\n  const singleCategory = (\n    <Layout>\n       <h1>All</h1>\n    </Layout>\n  );\n\n  const post = (\n    <Layout>\n      <AsyncPost />\n    </Layout>\n  )\n  \n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact render={() => header} />\n        <Route path=\"/signin\" exact component={AsyncAuthSignin} />\n        <Route path=\"/password-reset\" exact component={AsyncResetPass} />\n        <Route path=\"/signup\" exact component={AsyncAuthSignup} />\n        <Route path=\"/post-new\" exact render={() => post} />\n        <Route path=\"/all/:category\" exact render={() => singleCategory} />\n        <Route path=\"/:category/:subcategory\" render={() => main} />\n        <Route path=\"*\" render={() => <h1>404 Not Found</h1>} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","E:\\dec-exp\\src\\store\\reducers\\reducer_location.js",[],"E:\\dec-exp\\src\\store\\actions\\actionTypes.js",[],"E:\\dec-exp\\src\\store\\actions\\index.js",[],"E:\\dec-exp\\src\\hoc\\asyncComponent\\asyncComponent.js",[],"E:\\dec-exp\\src\\store\\reducers\\reducer_data.js",[],"E:\\dec-exp\\src\\store\\Filters\\for_kids.js",[],"E:\\dec-exp\\src\\store\\Categories\\categories.js",[],"E:\\dec-exp\\src\\store\\actions\\actions_location.js",[],"E:\\dec-exp\\src\\store\\actions\\actions_filter.js",[],"E:\\dec-exp\\src\\store\\actions\\actions_data.js",[],"E:\\dec-exp\\src\\utilities\\utilities.js",[],"E:\\dec-exp\\src\\store\\Filters\\real_estate.js",[],"E:\\dec-exp\\src\\store\\Filters\\electronics.js",[],"E:\\dec-exp\\src\\store\\Filters\\transport_auto.js",[],"E:\\dec-exp\\src\\store\\Filters\\jobs.js",[],"E:\\dec-exp\\src\\store\\Filters\\pets.js",[],"E:\\dec-exp\\src\\store\\Filters\\home_and_garden.js",[],"E:\\dec-exp\\src\\store\\Filters\\business_and_services.js",[],"E:\\dec-exp\\src\\store\\Filters\\fashion_and_style.js",[],"E:\\dec-exp\\src\\store\\Filters\\sports_hobby_and_comfort.js",[],"E:\\dec-exp\\src\\components\\Dropdown.js",[],"E:\\dec-exp\\src\\containers\\Main.js",["190"],"import React, { PureComponent } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Filter from '../components/Filter';\r\nimport Adview from '../components/Adview';\r\nimport Card from '../components/Card';\r\nimport Searchbar from '../components/Searchbar';\r\nimport * as utils from '../utilities/utilities';\r\n\r\nclass Main extends PureComponent {\r\n\r\n    render() {\r\n        const premiumArr = this.props.data.filter(el => el.premium === true);\r\n        const premium = premiumArr.map((el, i) => <Card data={el} key={i} />);\r\n\r\n        const usualAdsArr = this.props.data.filter(el => el.premium === false);\r\n        const usualAds = usualAdsArr.map((el, i) => <Card data={el} key={i} />);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Searchbar />\r\n                <Filter />\r\n                <Route path=\"/:category/:subcategory/:id\" exact render={() => <Adview {...this.props} data={this.props.data} />} />\r\n                <section className=\"main\">\r\n                    <div className=\"container\">\r\n                        <div className=\"main__wrapper\">\r\n                            <div className=\"main__head\">\r\n                                <div className=\"main__group\">\r\n                                    <h2 className=\"heading heading__2 main__heading mb-5 mr-1\">Premiuim ads</h2>\r\n                                    <Link to=\"/\" className=\"filter__btn filter__btn--close main__link\">See all</Link>\r\n                                </div>\r\n                                <p className=\"main__subhead\">Found 1,354 ads in this category</p>\r\n                            </div>\r\n                            <div className=\"main__list\">{premium}</div>\r\n                            <div className=\"main__head\">\r\n                                <div>\r\n                                    <h2 className=\"heading heading__2 main__heading mb-5\">Usual ads</h2>\r\n                                    <p className=\"main__subhead\">Found 4,635 ads in this category</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"main__list\">{usualAds}</div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.data.data,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","E:\\dec-exp\\src\\containers\\Layout.js",["191"],"import React from 'react';\r\nimport Footer from './Footer';\r\nimport Navigation from './Navigation';\r\nimport Searchbar from '../components/Searchbar';\r\n\r\nconst Layout = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Navigation />\r\n                {props.children}\r\n            <Footer />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Layout;","E:\\dec-exp\\src\\components\\Filter.js",["192","193","194","195","196","197"],"import React, { PureComponent } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Dropdown from './Dropdown';\r\nimport * as actions from '../store/actions';\r\nimport * as utils from '../utilities/utilities';\r\nimport Tooltip from '../UI/Tooltip';\r\n\r\nclass Filter extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterConfig: {}\r\n        }\r\n        this.category = this.props.match.params.category;\r\n        this.subCategory = this.props.match.params.subcategory;\r\n    }\r\n\r\n    importFilter = async (cat) => {\r\n        try {\r\n            const filter = await import(`../store/Filters/${cat}`);\r\n            this.setState({ filterConfig: filter.default });\r\n        } catch(er) {\r\n            this.setState({ filterConfig: null });\r\n            console.log(er);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.importFilter(this.category);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // console.log('this.category: ' + this.category);\r\n        // window.category = this.category;\r\n        // console.log('this.props...category: ' + this.props.match.params.category);\r\n        if (this.props.match.params.category !== this.category) this.importFilter(this.props.match.params.category);\r\n    }\r\n\r\n    render() {\r\n\r\n        let subCatItems;\r\n        let counters;\r\n        \r\n        const categoryObj = this.state.filterConfig[this.props.match.params.category];\r\n        \r\n        if (categoryObj) {\r\n\r\n            const innerSubCatItems = categoryObj.items[this.props.match.params.subcategory];\r\n\r\n            subCatItems = innerSubCatItems.sub.map((obj, index) => {\r\n\r\n                const innerItems = obj.items.map((el, i) => {\r\n                    return <div className=\"filter__dropitem\" key={i} onClick={() => this.props[obj.method](utils.toLower(el))}>{utils.capitalize(el)}</div>\r\n                });\r\n\r\n                return (\r\n                    <li className=\"filter__item\" key={index}>\r\n                        <p className=\"filter__title\">{obj.title}</p>\r\n                        <div className=\"filter__input filter__input--d input\" tabIndex=\"0\">\r\n                            {utils.capitalize(this.props[utils.toLower(obj.title)])}\r\n                            <svg className=\"filter__icon filter__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                            <Dropdown class=\"dropdown--full dropdown--sm-s\">\r\n                                {innerItems}\r\n                            </Dropdown>\r\n                        </div>\r\n                    </li>\r\n                );\r\n            });\r\n        \r\n            counters = innerSubCatItems.counters.map((el, i) => {\r\n                return (\r\n                    <li className=\"filter__item\" key={i}>\r\n                        <p className=\"filter__title\">{el.title}</p>\r\n                        <div className=\"filter__group\">\r\n                            <label className=\"filter__label\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"filter__input filter__input--small input\" \r\n                                    placeholder=\"from\" \r\n                                    onChange={(e) => this.props[el.method](e.target.value)} \r\n                                    value={this.props[utils.toLower(el.title)].from} />\r\n                                <button className=\"filter__btn filter__btn--abs\" onClick={() => this.props[el.method]('')}>\r\n                                    <svg className=\"filter__icon filter__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                </button>\r\n                            </label>\r\n                            <label className=\"filter__label\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"filter__input filter__input--small filter__input--border  input\" \r\n                                    placeholder=\"to\" \r\n                                    onChange={(e) => this.props[el.methodEnd](e.target.value)} \r\n                                    value={this.props[utils.toLower(el.title)].to} />\r\n                                <button className=\"filter__btn filter__btn--abs\" onClick={() => this.props[el.methodEnd]('')}>\r\n                                    <svg className=\"filter__icon filter__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                </button>\r\n                            </label>\r\n                        </div>\r\n                    </li>\r\n                )\r\n            });\r\n        } else return <h1>404 Not found!</h1>;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"filter\">\r\n                    <div className=\"container\">\r\n                        <div className=\"filter__wrapper\">\r\n                            <div className=\"filter__list filter__list--headline\">\r\n                                <h3 className=\"heading heading__3 filter__heading\">Filters</h3>\r\n                                <div className=\"filter__group\">\r\n                                    <button className=\"filter__btn filter__btn--close\" onClick={() => this.props.onClearFilter()}>\r\n                                        Clear\r\n                                        <svg className=\"filter__icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <ul className=\"filter__list filter__list--midline\">\r\n                                <li className=\"filter__item\">\r\n                                    <p className=\"filter__title\">Price</p>\r\n                                    <div className=\"filter__group\">\r\n                                        <label className=\"filter__label\">\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"filter__input filter__input--small input\" \r\n                                                placeholder=\"from\" \r\n                                                onChange={(e) => this.props.onFilterByPriceStart(e.target.value)} \r\n                                                value={this.props.price.from} />\r\n                                            <button className=\"filter__btn filter__btn--abs\" onClick={() => this.props.onFilterByPriceStart('')}>\r\n                                                <svg className=\"filter__icon filter__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                            </button>\r\n                                        </label>\r\n                                        <label className=\"filter__label\">\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"filter__input filter__input--small filter__input--border  input\" \r\n                                                placeholder=\"to\" \r\n                                                onChange={(e) => this.props.onFilterByPriceEnd(e.target.value)} \r\n                                                value={this.props.price.to} />\r\n                                            <button className=\"filter__btn filter__btn--abs\" onClick={() => this.props.onFilterByPriceEnd('')}>\r\n                                                <svg className=\"filter__icon filter__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                            </button>\r\n                                        </label>\r\n                                    </div>\r\n                                </li>\r\n                                {counters}\r\n                                {subCatItems}\r\n                                <li className=\"filter__item\">\r\n                                    <p className=\"filter__title\">Sort by</p>\r\n                                    <div className=\"filter__input filter__input--d input\" tabIndex=\"0\">\r\n                                        {utils.capitalize(this.props.sort)}\r\n                                        <svg className=\"filter__icon filter__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                        <Dropdown class=\"dropdown--full dropdown--sm-s\">\r\n                                            <div className=\"filter__dropitem\" onClick={() => this.props.onSortBy('Date')}>Date</div>\r\n                                            <div className=\"filter__dropitem\" onClick={() => this.props.onSortBy('Most expensive')}>Most expensive</div>\r\n                                            <div className=\"filter__dropitem\" onClick={() => this.props.onSortBy('Cheapest')}>Cheapest</div>\r\n                                        </Dropdown>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"filter__topline\">\r\n                    <div className=\"container\">\r\n                        <div className=\"filter__list filter__list--headline filter__list--stickline\">\r\n                            <ul className=\"filter__group\">\r\n                                <li className=\"tag tag__types filter__item--tags mr-15\">\r\n                                    <a href=\"#\" className=\"filter__link filter__link--tags\">Lalaku</a>\r\n                                </li>\r\n                                <li className=\"tag tag__types filter__item--tags mr-15\">\r\n                                    <a href=\"#\" className=\"filter__link filter__link--tags\">Baby jackets</a>\r\n                                </li>\r\n                                <li className=\"tag tag__types filter__item--tags mr-15\">\r\n                                    <a href=\"#\" className=\"filter__link filter__link--tags\">Baby Jeans</a>\r\n                                </li>\r\n                                <li className=\"tag tag__types filter__item--tags mr-15\">\r\n                                    <a href=\"#\" className=\"filter__link filter__link--tags\">Carriages</a>\r\n                                </li>\r\n                                <li className=\"tag tag__types filter__item--tags\">\r\n                                    <a href=\"#\" className=\"filter__link filter__link--tags\">Toys</a>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"filter__group h-100\">\r\n                                <Link to=\"/\" className=\"filter__link filter__link--route\">Home</Link>\r\n                                <span className=\"filter__link filter__link--route\">&bull;</span>\r\n                                <Link to={'/' + this.category} className=\"filter__link filter__link--route\">{utils.formatRouteString(this.category)}</Link>\r\n                                <span className=\"filter__link filter__link--route\">&bull;</span>\r\n                                <span className=\"filter__link filter__link--route\">{utils.formatRouteString(this.subCategory)}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        condition: state.filters.condition,\r\n        type: state.filters.type,\r\n        price: state.filters.price,\r\n        size: state.filters.size,\r\n        sort: state.filters.sort,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFilterByPriceStart: (val) => dispatch(actions.filterByPriceStart(val)),\r\n        onFilterByPriceEnd: (val) => dispatch(actions.filterByPriceEnd(val)),\r\n        onFilterBySizeStart: (val) => dispatch(actions.filterBySizeStart(val)),\r\n        onFilterBySizeEnd: (val) => dispatch(actions.filterBySizeEnd(val)),\r\n        onFilterByCondition: (val) => dispatch(actions.filterByCondition(val)),\r\n        onFilterByType: (val) => dispatch(actions.filterByType(val)),\r\n        onSortBy: (val) => dispatch(actions.sortBy(val)),\r\n        onChangeCardView: (val) => dispatch(actions.changeCardView(val)),\r\n        onClearFilter: () => dispatch(actions.clearFiler())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Filter));","E:\\dec-exp\\src\\containers\\Header.js",[],"E:\\dec-exp\\src\\components\\Searchbar.js",[],"E:\\dec-exp\\src\\containers\\AuthSignup.js",[],"E:\\dec-exp\\src\\containers\\AuthSignin.js",["198","199"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as emailValidator from 'email-validator';\r\nimport axios from 'axios';\r\n\r\nimport Backdrop from '../UI/Backdrop';\r\nimport Language from '../components/Language';\r\nimport Logo from '../components/Logo';\r\nimport * as utils from '../utilities/utilities';\r\n\r\nclass AuthSignin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inputFocused: false,\r\n            error: null\r\n        }\r\n\r\n        this.checkboxRef = React.createRef();\r\n        this.loginRef = React.createRef();\r\n        this.passRef = React.createRef();\r\n    }\r\n\r\n    clearErrorHighlight = () => {\r\n        this.loginRef.current.setCustomValidity('');\r\n        this.passRef.current.setCustomValidity('');\r\n        this.setState({ error: null });\r\n    }\r\n\r\n    validated = (validEmail, filled) => {\r\n        if (filled) {\r\n            if (!validEmail) {\r\n                this.loginRef.current.setCustomValidity('Invalid email');\r\n                this.loginRef.current.focus();\r\n                this.setState({ error: 'Please enter valid email address' });\r\n                return false;\r\n            } else {\r\n                this.clearErrorHighlight();\r\n                return true;\r\n            }\r\n        } else {\r\n            this.loginRef.current.setCustomValidity('Empty');\r\n            this.passRef.current.setCustomValidity('Empty');\r\n            this.loginRef.current.focus();\r\n            this.setState({ error: 'Please fill out all of the fields' });\r\n        }\r\n    }\r\n\r\n    onProceed = (e) => {\r\n        e.preventDefault();\r\n        const mainInput = this.loginRef.current;\r\n        const password = this.passRef.current;\r\n        const remember = this.checkboxRef.current.checked;\r\n\r\n        if ((mainInput.value && password.value) !== '') {\r\n            let isNum = /^\\d+$/.test(mainInput.value);\r\n            if (mainInput.value.includes('+')) isNum = true;\r\n            let query = 'email';\r\n            if (isNum) query = 'phone';\r\n\r\n            let validEmail = true;\r\n            if (!isNum) validEmail = emailValidator.validate(mainInput.value);\r\n\r\n            if (this.validated(validEmail, true)) {\r\n                console.log(mainInput.value);\r\n                console.log(password.value);\r\n                console.log(remember);\r\n\r\n                // --------------------------------------------\r\n                \r\n                // ..........\r\n            }\r\n        } else this.validated(null, false);\r\n    }\r\n\r\n    onTogglePass = (e) => {\r\n        if (this.passRef.current.value !== '') {\r\n            if (this.passRef.current.type === 'password') this.passRef.current.type = 'text';\r\n            else this.passRef.current.type = 'password';\r\n        }\r\n    }\r\n\r\n    onFocus = () => this.setState({ inputFocused: true });\r\n    onBlur = () => this.setState({ inputFocused: false });\r\n\r\n    render() {\r\n        const wrapClass = ['authorization__wrapper'];\r\n        if (this.state.inputFocused) wrapClass.push('authorization__wrapper--animate');\r\n\r\n        return (\r\n            <div className=\"authorization\">\r\n                {this.state.inputFocused && <Backdrop z={1} click={this.onBlur} />}\r\n                <Language class=\"authorization__lang\" dropClass=\"dropdown--left-fix\"/>\r\n                <div className={wrapClass.join(' ')} onClick={() => this.onFocus()}>\r\n                    <div className=\"authorization__head\">\r\n                        <Logo />\r\n                        <Link to=\"/signup\" className=\"authorization__info authorization__info--heading\">\r\n                            <svg className=\"authorization__icon\" dangerouslySetInnerHTML={{__html: utils.use('user-plus')}} />\r\n                            Sign up\r\n                        </Link>\r\n                    </div>\r\n                    {this.state.error && <p className=\"authorization__error mb-1\">{this.state.error}</p>}\r\n                    <form className=\"authorization__form\">\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"text\" \r\n                                placeholder=\"Your number or email\"\r\n                                ref={this.loginRef} />\r\n                            <p className=\"authorization__label authorization__label--abs\">Your number or email</p>\r\n                        </label>\r\n                        <label className=\"authorization__label\">\r\n                            <input \r\n                                className=\"authorization__input input\" \r\n                                type=\"password\" \r\n                                placeholder=\"Enter your password\"\r\n                                ref={this.passRef} />\r\n                            <button type=\"button\" className=\"authorization__btn--abs\" onClick={(e) => this.onTogglePass(e)}>\r\n                                <svg className=\"authorization__icon\" dangerouslySetInnerHTML={{__html: utils.use('eye-off')}} />\r\n                            </button>\r\n                            <p className=\"authorization__label authorization__label--abs\">Your password</p>\r\n                        </label>\r\n                        <div className=\"authorization__item\">\r\n                            <input type=\"checkbox\" id=\"remember\" className=\"checkbox\" ref={this.checkboxRef} />\r\n                            <label htmlFor=\"remember\" className=\"label\">\r\n                                <span></span>\r\n                                Stay logged in\r\n                            </label>\r\n                        </div>\r\n                        <button className=\"btn btn__primary authorization__btn mb-1\" onClick={(e) => this.onProceed(e)}>\r\n                            Sign in\r\n                            <svg className=\"icon ml-5 icon--8\" dangerouslySetInnerHTML={{__html: utils.use('log-in')}} />\r\n                        </button>\r\n                        <Link to=\"/password-reset\" className=\"authorization__info mb-15\">Reset password</Link>\r\n                        <p className=\"authorization__info\">Do not have an account? <Link to=\"/signup\" className=\"authorization__info--high\">Sign up</Link></p>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthSignin;","E:\\dec-exp\\src\\containers\\ResetPass.js",[],"E:\\dec-exp\\src\\components\\Logo.js",[],"E:\\dec-exp\\src\\components\\Categories.js",[],"E:\\dec-exp\\src\\components\\Card.js",[],"E:\\dec-exp\\src\\containers\\Footer.js",["200"],"import React from 'react';\r\n\r\nimport Logo from '../components/Logo';\r\nimport Language from '../components/Language';\r\n\r\nimport * as utils from '../utilities/utilities';\r\n\r\nconst Footer = props => {\r\n\r\n    const year = new Date().getFullYear();\r\n\r\n    const navs = ['Help', 'Enterprise Adverts', 'Terms of use', 'Privacy Policy', 'SBUY Guide', 'Security measures', 'Site map', 'Map of regions', 'Career', 'Feedback'];\r\n\r\n    const navItems = navs.map((el, i) => {\r\n        return (\r\n            <li className=\"footer__item\" key={i}>\r\n                <a href=\"#\" className=\"footer__link\">{el}</a>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer__head\">\r\n                <div className=\"container\">\r\n                    <div className=\"footer__headwrap\">\r\n                        <div className=\"navigation__item\">\r\n                            <svg className=\"footer__icon\" dangerouslySetInnerHTML={{__html: utils.use('home')}} />\r\n                            <h5 className=\"footer__heading\">Home</h5>\r\n                        </div>\r\n                        <Language class=\"navigation__item navigation__item--drop\" dropClass=\"dropdown--right-fix\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"footer__wrapper\">\r\n                    <div className=\"footer__body\">\r\n                        <div div className=\"footer__group\">\r\n                            <Logo class=\"footer__logo\" />\r\n                            <ul className=\"footer__list\">\r\n                                {navItems}\r\n                            </ul>\r\n                            <p className=\"footer__info\">\r\n                                For all questions, you can contact us<br/> at any convenient time by phone or email<br/>\r\n                                +998 (71) 240-60-50 <br/>\r\n                                sbuy@retail.uz\r\n                            </p>\r\n                        </div>\r\n                        <p className=\"footer__info\">{year} SBUY&copy;</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default React.memo(Footer);","E:\\dec-exp\\src\\components\\Adview.js",["201"],"import React, { Component, PureComponent } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { SwiperSlide, Swiper } from 'swiper/react';\r\nimport SwiperCore, { Scrollbar, Mousewheel, Pagination, Navigation } from 'swiper';\r\nimport Rating from 'react-rating';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport * as utils from '../utilities/utilities';\r\n\r\nimport avatar from '../assets/images/32.jpg';\r\nimport Backdrop from '../UI/Backdrop';\r\nimport Tooltip from '../UI/Tooltip';\r\n\r\nSwiperCore.use([Scrollbar, Mousewheel, Pagination, Navigation]);\r\n\r\nclass adview extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            index: null,\r\n            rating: 4.5,\r\n            showNum: false,\r\n            showMessageBar: false,\r\n            rotate: null,\r\n            message: '',\r\n            fullScreen: false,\r\n            swiperBegin: true,\r\n            swiperEnd: false,\r\n            activeSwiperImage: 0\r\n        }\r\n        this.categoryPath = `${this.props.match.params.category}/${this.props.match.params.subcategory}`;\r\n        this.id = this.props.match.params.id;\r\n\r\n        this.copyNumRef = React.createRef();\r\n        this.mesTitleRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Initial id: ' + this.id);\r\n        const index = this.props.data.findIndex(el => el.id === this.id);\r\n        if (index === -1) {\r\n            console.log('No such ad exists');\r\n        } else this.setState({ index }, () => console.log('Find index by id: ' + this.state.index));\r\n\r\n        const root = document.documentElement;\r\n        root.style.setProperty('--cat-item-transition', 'none');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.swiper.update();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.swiper.destroy();\r\n\r\n        const root = document.documentElement;\r\n        root.style.setProperty('--cat-item-transition', 'all .3s ease');\r\n    }\r\n\r\n    onNextImage = (img) => {\r\n        if (this.state.activeSwiperImage < img.length - 1) {\r\n            this.setState((prevState) => {\r\n                return { activeSwiperImage: prevState.activeSwiperImage + 1 }\r\n            })\r\n        } else this.setState({ activeSwiperImage: 0 });\r\n    }\r\n\r\n    onPrevImage = () => {\r\n        if (this.state.activeSwiperImage > 0) {\r\n            this.setState((prevState) => {\r\n                return { activeSwiperImage: prevState.activeSwiperImage - 1 }\r\n            })\r\n        }\r\n    }\r\n\r\n    onGoFullScreen = () => this.setState({ fullScreen: true });\r\n    onCloseFullScreen = () => this.setState({ fullScreen: false });\r\n\r\n    onReachBeginSwiper = () => this.setState({ swiperBegin: true, swiperEnd: false }, () => console.log(this.state.swiperBegin, this.state.swiperEnd));\r\n    onReachEndSwiper = () => this.setState({ swiperBegin: false, swiperEnd: true }, () => console.log(this.state.swiperBegin, this.state.swiperEnd));\r\n\r\n    onRotate = () => {\r\n        let i = 0;\r\n        const degrees = [90, 180, 270, 360];\r\n        if (this.state.rotate) {\r\n            i = degrees.findIndex(el => el === this.state.rotate) + 1;\r\n        }\r\n        if (i > degrees.length - 1) i = 0;\r\n        this.setState({ rotate: degrees[i] }, () => console.log(this.state.rotate));\r\n    }\r\n\r\n    onEnterMessage = (e) => {\r\n        this.setState({ message: e.target.value });\r\n    }\r\n\r\n    onSendMessage = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.message) {\r\n            this.mesTitleRef.current.textContent = 'Your message is sent!';\r\n            setTimeout(() => {\r\n                this.mesTitleRef.current.textContent = 'Write your message...';\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onShowNumber = () => {\r\n        this.setState({ showNum: true });\r\n    }\r\n\r\n    closePopup = () => {\r\n        this.props.history.replace('/' + this.categoryPath);\r\n    }\r\n\r\n    onShowMessageBar = () => this.setState({ showMessageBar: true });\r\n    onHideMessageBar = () => this.setState({ showMessageBar: false });\r\n\r\n    onCopyNum = (val) => {\r\n        const el = document.createElement('textarea');\r\n        el.value = val;\r\n        el.style.position = 'absolute';\r\n        el.style.left = '-9999px';\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        el.setSelectionRange(0, 99999);\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    onHideNum = () => this.setState({ showNum: false });\r\n    \r\n    onClickNext = () => {\r\n        if (this.state.index < this.props.data.length - 1) {\r\n            this.setState(prevState => {\r\n                return { index: prevState.index + 1 }\r\n            }, () => {\r\n                this.props.history.replace(`/${this.categoryPath}/${this.props.data[this.state.index].id}`);\r\n            });\r\n        }\r\n        else this.props.history.replace(`/${this.categoryPath}`);\r\n        if (this.state.activeSwiperImage > 0) this.setState({ activeSwiperImage: 0 });\r\n    }\r\n    \r\n    onClickPrev = () => {\r\n        if (this.state.index > 0) {\r\n            this.setState(prevState => {\r\n                return { index: prevState.index - 1 }\r\n            }, () => {\r\n                this.props.history.replace(`/${this.props.match.params.category}/${this.props.match.params.subcategory}/${this.props.data[this.state.index].id}`);\r\n            });\r\n        }\r\n        else this.props.history.replace(`/${this.categoryPath}`);\r\n        if (this.state.activeSwiperImage > 0) this.setState({ activeSwiperImage: 0 });\r\n    }\r\n\r\n    render() {\r\n        const category = `/${this.props.match.params.category}`;\r\n        const subcategory = this.props.match.params.subcategory;\r\n        console.log(subcategory, category);\r\n\r\n        let rotateDegClass = '';\r\n        if (this.state.rotate) rotateDegClass = `adview__rotate--${this.state.rotate}`;\r\n\r\n        const topGradientClass = ['adview__gradient adview__gradient--top'];\r\n        const bottomGradientClass = ['adview__gradient'];\r\n        if (this.state.swiperEnd) topGradientClass.push('adview__gradient--show');\r\n        if (this.state.swiperBegin) bottomGradientClass.push('adview__gradient--show');\r\n        \r\n        const ad = this.props.data[this.state.index];\r\n        if (!ad) return null;\r\n\r\n        const images = ad.img.map((el, i) => (\r\n            <SwiperSlide className={`adview__figmain ${rotateDegClass}`} key={i}>\r\n                <LazyLoadImage \r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    className=\"adview__img\"\r\n                    src={el}\r\n                    alt={i}\r\n                    />\r\n            </SwiperSlide>\r\n        ));\r\n\r\n        const adsFrom = this.props.data.map((el, i) => {\r\n            return (\r\n                <Link to=\"/\" className=\"adview__card adview__box adview__box--card\" key={i}>\r\n                    <figure className=\"adview__figure adview__figure--card mr-2\">\r\n                        <LazyLoadImage \r\n                            className=\"adview__img adview__img--card\"\r\n                            src={el.img[0]}\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                            />\r\n                    </figure>\r\n                    <div className=\"adview__group adview__group--col w-max afs\">\r\n                        <span className=\"adview__subheading adview__subheading--card mb-1\">{el.title}</span>\r\n                        <span className=\"adview__title mb-5\">{el.date}</span>\r\n                        <span className=\"adview__title mb-5\">{el.location}</span>\r\n                        <span className=\"price-tag\">{el.price}</span>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        })\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <header className=\"adview\">\r\n                    {/* <Backdrop click={this.closePopup} z={14}/> */}\r\n                        {this.state.fullScreen && \r\n                            <div className=\"adview__fullscreen\">\r\n                                <div className=\"container\">\r\n                                    <Backdrop z={1} click={this.onCloseFullScreen} />\r\n                                    <div className=\"adview__fullscreenwrap\">\r\n                                        <figure className=\"adview__figure adview__figure--full\">\r\n                                            <img src={ad.img[this.state.activeSwiperImage]} alt={ad.title} className=\"adview__img adview__img--full\" />\r\n                                        </figure>\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"adview__btn adview__btn--abs adview__btn--grey adview__btn--left\" onClick={() => this.onPrevImage()}>\r\n                                    <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-left')}} />\r\n                                </button>\r\n                                <button className=\"adview__btn adview__btn--abs adview__btn--grey adview__btn--right\" onClick={() => this.onNextImage(ad.img)}>\r\n                                    <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                        <Swiper \r\n                            className=\"adview__wrapper\"\r\n                            direction=\"vertical\"\r\n                            slidesPerView=\"auto\"\r\n                            freeMode\r\n                            scrollbar={{ el: '#scrollbar', draggable: true, snapOnRelease: false }}\r\n                            mousewheel\r\n                            simulateTouch={false}\r\n                            keyboard={{ enabled: true, onlyInViewport: true }}>\r\n                            <SwiperSlide className=\"adview__content\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"adview__head\">\r\n                                        <div className=\"adview__group\">\r\n                                            <Link to=\"/\" className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">Home</Link>\r\n                                            <Link to={category} className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">{utils.capitalize(utils.parseUrl(utils.formatRouteString(category)))}</Link>\r\n                                            <Link to={`${category}/${subcategory}`} className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">{utils.capitalize(utils.parseUrl(utils.formatRouteString(subcategory)))}</Link>\r\n                                            <span className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">{ad.title}</span>\r\n                                        </div>\r\n                                        <div className=\"adview__group\">\r\n                                            <button className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto afs\" onClick={() => this.onClickPrev()}>\r\n                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-left')}} />\r\n                                                Previous Ad\r\n                                            </button>\r\n                                            <button className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto afs\" onClick={() => this.onClickNext()}>\r\n                                                Next Ad\r\n                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                            </button>\r\n                                            <button className=\"adview__btn adview__btn--rel adview__btn--bggrey DTool pos-rel DTool DTool--bottom no-transition\" onClick={() => this.closePopup()}>\r\n                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                                <Tooltip>Close</Tooltip>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"adview__main\">\r\n                                        <div className=\"adview__left\">\r\n                                            <div className=\"adview__box adview__box--main\">\r\n                                                <Swiper \r\n                                                    className=\"adview__swiper\"\r\n                                                    slidesPerView={1}\r\n                                                    navigation={{nextEl: '#right', prevEl: '#left', disabledClass: 'adview__btn--disabled'}}\r\n                                                    pagination={{ el: '.swiper-pagination' }}\r\n                                                    onSwiper={(sw) => this.swiper = sw}\r\n                                                    simulateTouch={false}\r\n                                                    preloadImages\r\n                                                    updateOnImagesReady\r\n                                                    onImagesReady={() => this.swiper.update()}\r\n                                                    onSlideChange={(sw) => this.setState({ activeSwiperImage: sw.activeIndex })}\r\n                                                    preventInteractionOnTransition={true}>\r\n                                                    {images}\r\n                                                    <button className=\"adview__btn adview__btn--abs adview__btn--left\" id=\"left\">\r\n                                                        <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-left')}} />\r\n                                                    </button>\r\n                                                    <button className=\"adview__btn adview__btn--abs adview__btn--right\" id=\"right\">\r\n                                                        <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                                    </button>\r\n                                                    <div className=\"adview__group adview__group--abs\">\r\n                                                        <button className=\"adview__btn DTool adview__btn--rel adview__btn--abs adview__btn--corner mr-2 pos-rel no-transition\" onClick={() => this.onRotate()}>\r\n                                                            <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('rotate-cw')}} />\r\n                                                            <Tooltip>Rotate the photo</Tooltip>\r\n                                                        </button>\r\n                                                        <button className=\"adview__btn DTool adview__btn--rel adview__btn--abs adview__btn--corner pos-rel no-transition\" onClick={() => this.onGoFullScreen()}>\r\n                                                            <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('maximize')}} />\r\n                                                            <Tooltip>Full Screen</Tooltip>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div className=\"swiper-pagination\"></div>\r\n                                                </Swiper>\r\n                                                <div className=\"adview__details mb-2\">\r\n                                                    <div className=\"adview__group sb\">\r\n                                                        <div className=\"adview__headingwrap\">\r\n                                                            <h1 className=\"heading heading__1\" data-premium={ad.premium}>\r\n                                                                {ad.title}\r\n                                                                <span className=\"badge ml-1\">\r\n                                                                    Promoted\r\n                                                                </span>\r\n                                                            </h1>\r\n                                                            <div className=\"adview__subheading mb-1\">\r\n                                                                <p className=\"adview__item adview__item--location\">{ad.date}, {ad.location}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"adview__group sb afe\">\r\n                                                        <div>\r\n                                                            <p className=\"price-tag adview__item adview__item--price\">{ad.price}</p>\r\n                                                        </div>\r\n                                                        <div className=\"adview__group\">\r\n                                                            <button className=\"adview__btn adview__btn--rel DTool pos-rel no-transition\">\r\n                                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('share')}} />\r\n                                                                <Tooltip>Share</Tooltip>\r\n                                                            </button>\r\n                                                            <button className=\"adview__btn adview__btn--rel DTool pos-rel no-transition\" data-favorite={ad.favorite}>\r\n                                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('heart')}} />\r\n                                                                <Tooltip>{!ad.favorite ? 'Add to favourites' : 'Remove from favorites'}</Tooltip>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"adview__box adview__box--description\">\r\n                                                <div className=\"adview__subhead sb mb-2\">\r\n                                                    <h2 className=\"heading heading__2 adview__subheading\">Description</h2>\r\n                                                    <p className=\"adview__title\">Number of views: 153&nbsp;&nbsp;|&nbsp;&nbsp;Edited at 13:16</p>\r\n                                                </div>\r\n                                                <div className=\"adview__group adview__group--col afs mb-1\">\r\n                                                    <p className=\"adview__title adview__title--mid mb-1\">Secifications:</p>\r\n                                                    <ul className=\"adview__group adview__group--wrap\">\r\n                                                        <li className=\"tag tag__types mb-1\">Camera: 100MP</li>\r\n                                                        <li className=\"tag tag__types mb-1\">CPU: Snapdragon 865</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Battery: 5000mAh</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Condition: New</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Color: Grey</li>\r\n                                                        <li className=\"tag tag__types mb-1\">ROM: 128GB</li>\r\n                                                        <li className=\"tag tag__types mb-1\">RAM: 8GB</li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                                <div className=\"adview__group adview__group--col afs\">\r\n                                                    <p className=\"adview__title adview__title--mid mb-1\">Personalized description:</p>\r\n                                                    <p className=\"adview__text\">\r\n                                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras viverra odio vel risus consequat feugiat. Vivamus nec lorem auctor felis suscipit ullamcorper sit amet non orci. Sed ornare justo eu arcu convallis venenatis. Sed luctus maximus viverra. Nullam sit amet urna fermentum, dignissim urna semper, auctor mi. Mauris pulvinar porta augue, sodales ultricies urna placerat vitae. \r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"adview__right\">\r\n                                            <div className=\"adview__box adview__box--user\">\r\n                                                <figure className=\"adview__figure adview__item\">\r\n                                                    <img className=\"adview__img\" src={avatar} alt={ad.id} />\r\n                                                </figure>\r\n                                                <Link to=\"/user/john_doe\" className=\"adview__item adview__item--name anim-link pos-rel no-transition\">John Doe</Link>\r\n                                                <span className=\"adview__item adview__item--titled\">\r\n                                                    <span className=\"adview__title mb-5\">Enterprise</span>\r\n                                                    <Link to=\"/company\" className=\"adview__item adview__item--lined\">Intech Ltd.</Link>\r\n                                                </span>\r\n                                                <span className=\"adview__item adview__item--titled\">\r\n                                                    <span className=\"adview__title mb-5\">Reviews:</span> \r\n                                                    <span className=\"adview__item\">\r\n                                                        <Rating \r\n                                                            className=\"adview__item--ratingbar\"\r\n                                                            initialRating={this.state.rating} \r\n                                                            fractions={2} \r\n                                                            emptySymbol={ <svg className=\"rating\" dangerouslySetInnerHTML={{__html: utils.useStars('star-empty')}} /> }\r\n                                                            fullSymbol={ <svg className=\"rating rating--fill\" dangerouslySetInnerHTML={{__html: utils.useStars('star-full')}} /> }\r\n                                                            onChange={(r) => this.setState({ rating: r })}\r\n                                                            />\r\n                                                        <span>{(Math.round(this.state.rating * 100) / 100).toFixed(1)}</span>\r\n                                                    </span>\r\n                                                </span>\r\n                                                <div className=\"adview__item pos-rel no-transition\">\r\n                                                    <button className=\"adview__btn--main btn btn__primary\" onClick={() => this.onShowNumber()}>\r\n                                                        Phone number\r\n                                                        <svg className=\"adview__icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('phone-outgoing')}} />\r\n                                                    </button>\r\n                                                    {this.state.showNum && \r\n                                                        <React.Fragment>\r\n                                                            <Backdrop z={98} click={this.onHideNum} />\r\n                                                            <Tooltip class=\"adview__numbox\" click={this.onHideNum}>\r\n                                                                <span className=\"adview__number\">+684 655985 2656</span>\r\n                                                                <button className=\"adview__btn adview__btn--clip ml-1\" onClick={() => this.onCopyNum('+684 655985 2656')} title=\"Copy number\">\r\n                                                                    <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('clipboard')}} />\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                        </React.Fragment>\r\n                                                    }\r\n                                                </div>\r\n                                                <button className=\"adview__btn--main adview__item btn btn__secondary\" onClick={() => this.onShowMessageBar()}>\r\n                                                    Write a message\r\n                                                    <svg className=\"adview__icon icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('edit-2')}} />\r\n                                                </button>\r\n                                            </div>\r\n                                            {this.state.showMessageBar && \r\n                                                <div className=\"adview__box adview__box--message\">\r\n                                                    <div className=\"adview__group adview__group--sb mb-1\">\r\n                                                        <p className=\"adview__title adview__title--big\" ref={this.mesTitleRef}>Write your message:</p>\r\n                                                        <button className=\"adview__btn adview__btn--sm adview__btn--rel pos-rel\" onClick={() => this.onHideMessageBar()}>\r\n                                                            <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <form className=\"adview__form\" onSubmit={(e) => this.onSendMessage(e)}>\r\n                                                        <textarea autoFocus required className=\"adview__input mr-5\" placeholder=\"Message...\" type=\"text\" onChange={(e) => this.onEnterMessage(e)} value={this.state.message} />\r\n                                                        <button className=\"wh-auto btn btn__primary btn__primary--outline\">\r\n                                                            Send\r\n                                                            <svg className=\"adview__icon icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('send')}} />\r\n                                                        </button>\r\n                                                    </form>\r\n                                                </div>\r\n                                            }\r\n                                            <Swiper\r\n                                                className=\"adview__cardscontainer\"\r\n                                                direction=\"vertical\"\r\n                                                slidesPerView=\"auto\"\r\n                                                freeMode\r\n                                                mousewheel\r\n                                                nested\r\n                                                simulateTouch={false}\r\n                                                keyboard={{ enabled: true, onlyInViewport: true }}\r\n                                                onReachBeginning={() => this.onReachBeginSwiper()}\r\n                                                onReachEnd={() => this.onReachEndSwiper()}\r\n                                                scrollbar={{ el: '#scrollbar-2', draggable: true, snapOnRelease: false }}\r\n                                                >\r\n                                                <span className={topGradientClass.join(' ')}></span>\r\n                                                <span className={bottomGradientClass.join(' ')}></span>\r\n                                                <SwiperSlide className=\"adview__cards\">\r\n                                                    {adsFrom}\r\n                                                    <button className=\"adview__card adview__card--btn\">See all</button>\r\n                                                </SwiperSlide>\r\n                                                <div className=\"swiper-scrollbar\" id=\"scrollbar-2\"></div>\r\n                                            </Swiper>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                        <div className=\"swiper-scrollbar\" id=\"scrollbar\"></div>\r\n                    </Swiper>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(adview);\r\n\r\n\r\n// var rgb = getAverageRGB(document.getElementById('i'));\r\n// document.body.style.backgroundColor = 'rgb('+rgb.r+','+rgb.g+','+rgb.b+')';\r\n\r\n// function getAverageRGB(imgEl) {\r\n\r\n// var blockSize = 5, // only visit every 5 pixels\r\n//     defaultRGB = {r:0,g:0,b:0}, // for non-supporting envs\r\n//     canvas = document.createElement('canvas'),\r\n//     context = canvas.getContext && canvas.getContext('2d'),\r\n//     data, width, height,\r\n//     i = -4,\r\n//     length,\r\n//     rgb = {r:0,g:0,b:0},\r\n//     count = 0;\r\n    \r\n// if (!context) {\r\n//     return defaultRGB;\r\n// }\r\n\r\n// height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;\r\n// width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;\r\n\r\n// context.drawImage(imgEl, 0, 0);\r\n\r\n// try {\r\n//     data = context.getImageData(0, 0, width, height);\r\n// } catch(e) {\r\n//     /* security error, img on diff domain */alert('x');\r\n//     return defaultRGB;\r\n// }\r\n\r\n// length = data.data.length;\r\n\r\n// while ( (i += blockSize * 4) < length ) {\r\n//     ++count;\r\n//     rgb.r += data.data[i];\r\n//     rgb.g += data.data[i+1];\r\n//     rgb.b += data.data[i+2];\r\n// }\r\n\r\n// // ~~ used to floor values\r\n// rgb.r = ~~(rgb.r/count);\r\n// rgb.g = ~~(rgb.g/count);\r\n// rgb.b = ~~(rgb.b/count);\r\n\r\n// return rgb;\r\n\r\n// }","E:\\dec-exp\\src\\components\\Language.js",[],"E:\\dec-exp\\src\\UI\\LoadingScreen.js",[],"E:\\dec-exp\\src\\UI\\Backdrop.js",[],"E:\\dec-exp\\src\\UI\\Tooltip.js",[],"E:\\dec-exp\\src\\containers\\Navigation.js",["202","203","204","205","206"],"E:\\dec-exp\\src\\containers\\Post.js",["207","208"],"E:\\dec-exp\\src\\store\\reducers\\reducer_filter.js",[],{"ruleId":"209","severity":1,"message":"210","line":5,"column":25,"nodeType":"211","messageId":"212","endLine":5,"endColumn":35},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"209","severity":1,"message":"217","line":8,"column":8,"nodeType":"211","messageId":"212","endLine":8,"endColumn":12},{"ruleId":"209","severity":1,"message":"218","line":9,"column":13,"nodeType":"211","messageId":"212","endLine":9,"endColumn":18},{"ruleId":"209","severity":1,"message":"219","line":4,"column":8,"nodeType":"211","messageId":"212","endLine":4,"endColumn":17},{"ruleId":"209","severity":1,"message":"220","line":9,"column":8,"nodeType":"211","messageId":"212","endLine":9,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":171,"column":37,"nodeType":"223","endLine":171,"endColumn":93},{"ruleId":"221","severity":1,"message":"222","line":174,"column":37,"nodeType":"223","endLine":174,"endColumn":93},{"ruleId":"221","severity":1,"message":"222","line":177,"column":37,"nodeType":"223","endLine":177,"endColumn":93},{"ruleId":"221","severity":1,"message":"222","line":180,"column":37,"nodeType":"223","endLine":180,"endColumn":93},{"ruleId":"221","severity":1,"message":"222","line":183,"column":37,"nodeType":"223","endLine":183,"endColumn":93},{"ruleId":"209","severity":1,"message":"224","line":4,"column":8,"nodeType":"211","messageId":"212","endLine":4,"endColumn":13},{"ruleId":"209","severity":1,"message":"225","line":60,"column":24,"nodeType":"211","messageId":"212","endLine":60,"endColumn":29},{"ruleId":"221","severity":1,"message":"222","line":17,"column":17,"nodeType":"223","endLine":17,"endColumn":54},{"ruleId":"209","severity":1,"message":"226","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":57,"column":25,"nodeType":"223","endLine":57,"endColumn":64},{"ruleId":"221","severity":1,"message":"222","line":62,"column":25,"nodeType":"223","endLine":62,"endColumn":88},{"ruleId":"221","severity":1,"message":"222","line":73,"column":25,"nodeType":"223","endLine":73,"endColumn":64},{"ruleId":"221","severity":1,"message":"222","line":81,"column":25,"nodeType":"223","endLine":81,"endColumn":64},{"ruleId":"221","severity":1,"message":"222","line":87,"column":25,"nodeType":"223","endLine":87,"endColumn":64},{"ruleId":"209","severity":1,"message":"227","line":2,"column":10,"nodeType":"211","messageId":"212","endLine":2,"endColumn":27},{"ruleId":"209","severity":1,"message":"228","line":4,"column":8,"nodeType":"211","messageId":"212","endLine":4,"endColumn":12},"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["229"],"no-negated-in-lhs",["230"],"'Post' is defined but never used.","'utils' is defined but never used.","'Searchbar' is defined but never used.","'Tooltip' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","'query' is assigned a value but never used.","'Component' is defined but never used.","'LazyLoadComponent' is defined but never used.","'audi' is defined but never used.","no-global-assign","no-unsafe-negation"]