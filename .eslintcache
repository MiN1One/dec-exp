[{"E:\\dec-exp\\src\\index.js":"1","E:\\dec-exp\\src\\reportWebVitals.js":"2","E:\\dec-exp\\src\\containers\\App.js":"3","E:\\dec-exp\\src\\store\\reducers\\reducer_location.js":"4","E:\\dec-exp\\src\\store\\actions\\actionTypes.js":"5","E:\\dec-exp\\src\\store\\actions\\index.js":"6","E:\\dec-exp\\src\\hoc\\asyncComponent\\asyncComponent.js":"7","E:\\dec-exp\\src\\store\\reducers\\reducer_data.js":"8","E:\\dec-exp\\src\\store\\Filters\\for_kids.js":"9","E:\\dec-exp\\src\\store\\Categories\\categories.js":"10","E:\\dec-exp\\src\\store\\actions\\actions_location.js":"11","E:\\dec-exp\\src\\store\\actions\\actions_filter.js":"12","E:\\dec-exp\\src\\store\\actions\\actions_data.js":"13","E:\\dec-exp\\src\\utilities\\utilities.js":"14","E:\\dec-exp\\src\\store\\Filters\\real_estate.js":"15","E:\\dec-exp\\src\\store\\Filters\\electronics.js":"16","E:\\dec-exp\\src\\store\\Filters\\transport_auto.js":"17","E:\\dec-exp\\src\\store\\Filters\\jobs.js":"18","E:\\dec-exp\\src\\store\\Filters\\pets.js":"19","E:\\dec-exp\\src\\store\\Filters\\home_and_garden.js":"20","E:\\dec-exp\\src\\store\\Filters\\business_and_services.js":"21","E:\\dec-exp\\src\\store\\Filters\\fashion_and_style.js":"22","E:\\dec-exp\\src\\store\\Filters\\sports_hobby_and_comfort.js":"23","E:\\dec-exp\\src\\components\\Dropdown.js":"24","E:\\dec-exp\\src\\containers\\Main.js":"25","E:\\dec-exp\\src\\containers\\Layout.js":"26","E:\\dec-exp\\src\\components\\Filter.js":"27","E:\\dec-exp\\src\\containers\\Header.js":"28","E:\\dec-exp\\src\\components\\Searchbar.js":"29","E:\\dec-exp\\src\\components\\Logo.js":"30","E:\\dec-exp\\src\\components\\Categories.js":"31","E:\\dec-exp\\src\\components\\Card.js":"32","E:\\dec-exp\\src\\containers\\Footer.js":"33","E:\\dec-exp\\src\\components\\Adview.js":"34","E:\\dec-exp\\src\\components\\Language.js":"35","E:\\dec-exp\\src\\UI\\LoadingScreen.js":"36","E:\\dec-exp\\src\\UI\\Backdrop.js":"37","E:\\dec-exp\\src\\UI\\Tooltip.js":"38","E:\\dec-exp\\src\\containers\\Navigation.js":"39","E:\\dec-exp\\src\\containers\\Post.js":"40","E:\\dec-exp\\src\\store\\reducers\\reducer_filter.js":"41","E:\\dec-exp\\src\\store\\PostFilters\\business_and_services.js":"42","E:\\dec-exp\\src\\store\\PostFilters\\for_kids.js":"43","E:\\dec-exp\\src\\store\\PostFilters\\home_and_garden.js":"44","E:\\dec-exp\\src\\store\\PostFilters\\fashion_and_style.js":"45","E:\\dec-exp\\src\\store\\PostFilters\\real_estate.js":"46","E:\\dec-exp\\src\\store\\PostFilters\\transport_auto.js":"47","E:\\dec-exp\\src\\store\\PostFilters\\sports_hobby_and_comfort.js":"48","E:\\dec-exp\\src\\store\\PostFilters\\electronics.js":"49","E:\\dec-exp\\src\\store\\PostFilters\\jobs.js":"50","E:\\dec-exp\\src\\store\\PostFilters\\pets.js":"51","E:\\dec-exp\\src\\containers\\Authorization\\AuthSignup.js":"52","E:\\dec-exp\\src\\containers\\Authorization\\ResetPass.js":"53","E:\\dec-exp\\src\\components\\Profile.js":"54","E:\\dec-exp\\src\\containers\\Authorization\\AuthSignin.js":"55","E:\\dec-exp\\src\\UI\\LoadingSub.js":"56"},{"size":1242,"mtime":1610007425111,"results":"57","hashOfConfig":"58"},{"size":362,"mtime":499162500000,"results":"59","hashOfConfig":"58"},{"size":1731,"mtime":1610113964045,"results":"60","hashOfConfig":"58"},{"size":764,"mtime":1608902289310,"results":"61","hashOfConfig":"58"},{"size":652,"mtime":1609096193849,"results":"62","hashOfConfig":"58"},{"size":393,"mtime":1609096213510,"results":"63","hashOfConfig":"58"},{"size":659,"mtime":1610012230241,"results":"64","hashOfConfig":"58"},{"size":4191,"mtime":1609830914900,"results":"65","hashOfConfig":"58"},{"size":3405,"mtime":1609075991734,"results":"66","hashOfConfig":"58"},{"size":3250,"mtime":1609601375057,"results":"67","hashOfConfig":"58"},{"size":439,"mtime":1609047572479,"results":"68","hashOfConfig":"58"},{"size":1238,"mtime":1609096193850,"results":"69","hashOfConfig":"58"},{"size":183,"mtime":1609047579103,"results":"70","hashOfConfig":"58"},{"size":1207,"mtime":1610019084716,"results":"71","hashOfConfig":"58"},{"size":2356,"mtime":1609596536223,"results":"72","hashOfConfig":"58"},{"size":4249,"mtime":1609596531693,"results":"73","hashOfConfig":"58"},{"size":5380,"mtime":1609603465025,"results":"74","hashOfConfig":"58"},{"size":8355,"mtime":1609604336547,"results":"75","hashOfConfig":"58"},{"size":4461,"mtime":1609604503152,"results":"76","hashOfConfig":"58"},{"size":5418,"mtime":1609600187483,"results":"77","hashOfConfig":"58"},{"size":7814,"mtime":1609604695223,"results":"78","hashOfConfig":"58"},{"size":3486,"mtime":1609601531710,"results":"79","hashOfConfig":"58"},{"size":3164,"mtime":1609604800538,"results":"80","hashOfConfig":"58"},{"size":167,"mtime":1609686174493,"results":"81","hashOfConfig":"58"},{"size":2575,"mtime":1609860712837,"results":"82","hashOfConfig":"58"},{"size":372,"mtime":1609860687927,"results":"83","hashOfConfig":"58"},{"size":12598,"mtime":1610084826282,"results":"84","hashOfConfig":"58"},{"size":4662,"mtime":1609860881723,"results":"85","hashOfConfig":"58"},{"size":4426,"mtime":1610038191742,"results":"86","hashOfConfig":"58"},{"size":372,"mtime":1609686873927,"results":"87","hashOfConfig":"58"},{"size":5945,"mtime":1609685886488,"results":"88","hashOfConfig":"58"},{"size":1773,"mtime":1609685886488,"results":"89","hashOfConfig":"58"},{"size":2272,"mtime":1609948916644,"results":"90","hashOfConfig":"58"},{"size":31681,"mtime":1609865299763,"results":"91","hashOfConfig":"58"},{"size":1537,"mtime":1609948591017,"results":"92","hashOfConfig":"58"},{"size":815,"mtime":1609685557290,"results":"93","hashOfConfig":"58"},{"size":218,"mtime":1609688274160,"results":"94","hashOfConfig":"58"},{"size":248,"mtime":1609685576895,"results":"95","hashOfConfig":"58"},{"size":8320,"mtime":1610113327103,"results":"96","hashOfConfig":"58"},{"size":35717,"mtime":1610123950314,"results":"97","hashOfConfig":"58"},{"size":2396,"mtime":1610007417156,"results":"98","hashOfConfig":"58"},{"size":11148,"mtime":1610083071106,"results":"99","hashOfConfig":"58"},{"size":4739,"mtime":1610083373339,"results":"100","hashOfConfig":"58"},{"size":4242,"mtime":1610083450263,"results":"101","hashOfConfig":"58"},{"size":4765,"mtime":1610083329854,"results":"102","hashOfConfig":"58"},{"size":3062,"mtime":1610083644825,"results":"103","hashOfConfig":"58"},{"size":4386,"mtime":1610083803413,"results":"104","hashOfConfig":"58"},{"size":4212,"mtime":1610083694854,"results":"105","hashOfConfig":"58"},{"size":5914,"mtime":1610083227901,"results":"106","hashOfConfig":"58"},{"size":12160,"mtime":1610085309327,"results":"107","hashOfConfig":"58"},{"size":4997,"mtime":1610083596708,"results":"108","hashOfConfig":"58"},{"size":9125,"mtime":1610099407786,"results":"109","hashOfConfig":"58"},{"size":7777,"mtime":1610099431305,"results":"110","hashOfConfig":"58"},{"size":16615,"mtime":1610133227059,"results":"111","hashOfConfig":"58"},{"size":6417,"mtime":1610099533833,"results":"112","hashOfConfig":"58"},{"size":130,"mtime":1610128085202,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},"ta4lz8",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"117"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"117"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"117"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"117"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"117"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\dec-exp\\src\\index.js",["233"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\n\nimport localization from './store/reducers/reducer_location';\nimport data from './store/reducers/reducer_data';\nimport filters from './store/reducers/reducer_filter';\n\nimport App from './containers/App';\nimport './index.scss';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  localization,\n  data,\n  filters\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["234","235"],"E:\\dec-exp\\src\\reportWebVitals.js",[],"E:\\dec-exp\\src\\containers\\App.js",["236"],"E:\\dec-exp\\src\\store\\reducers\\reducer_location.js",[],"E:\\dec-exp\\src\\store\\actions\\actionTypes.js",[],"E:\\dec-exp\\src\\store\\actions\\index.js",[],"E:\\dec-exp\\src\\hoc\\asyncComponent\\asyncComponent.js",[],"E:\\dec-exp\\src\\store\\reducers\\reducer_data.js",[],"E:\\dec-exp\\src\\store\\Filters\\for_kids.js",[],"E:\\dec-exp\\src\\store\\Categories\\categories.js",[],"E:\\dec-exp\\src\\store\\actions\\actions_location.js",[],"E:\\dec-exp\\src\\store\\actions\\actions_filter.js",[],"E:\\dec-exp\\src\\store\\actions\\actions_data.js",[],"E:\\dec-exp\\src\\utilities\\utilities.js",[],"E:\\dec-exp\\src\\store\\Filters\\real_estate.js",[],"E:\\dec-exp\\src\\store\\Filters\\electronics.js",[],"E:\\dec-exp\\src\\store\\Filters\\transport_auto.js",[],"E:\\dec-exp\\src\\store\\Filters\\jobs.js",[],"E:\\dec-exp\\src\\store\\Filters\\pets.js",[],"E:\\dec-exp\\src\\store\\Filters\\home_and_garden.js",[],"E:\\dec-exp\\src\\store\\Filters\\business_and_services.js",[],"E:\\dec-exp\\src\\store\\Filters\\fashion_and_style.js",[],"E:\\dec-exp\\src\\store\\Filters\\sports_hobby_and_comfort.js",[],"E:\\dec-exp\\src\\components\\Dropdown.js",[],"E:\\dec-exp\\src\\containers\\Main.js",["237"],"import React, { PureComponent } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Filter from '../components/Filter';\r\nimport Adview from '../components/Adview';\r\nimport Card from '../components/Card';\r\nimport Searchbar from '../components/Searchbar';\r\nimport * as utils from '../utilities/utilities';\r\n\r\nclass Main extends PureComponent {\r\n\r\n    render() {\r\n        const premiumArr = this.props.data.filter(el => el.premium === true);\r\n        const premium = premiumArr.map((el, i) => <Card data={el} key={i} />);\r\n\r\n        const usualAdsArr = this.props.data.filter(el => el.premium === false);\r\n        const usualAds = usualAdsArr.map((el, i) => <Card data={el} key={i} />);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Searchbar />\r\n                <Filter />\r\n                <Route path=\"/:category/:subcategory/:id\" exact render={() => <Adview {...this.props} data={this.props.data} />} />\r\n                <section className=\"main\">\r\n                    <div className=\"container\">\r\n                        <div className=\"main__wrapper\">\r\n                            <div className=\"main__head\">\r\n                                <div className=\"main__group\">\r\n                                    <h2 className=\"heading heading__2 main__heading mb-5 mr-1\">Premiuim ads</h2>\r\n                                    <Link to=\"/\" className=\"filter__btn filter__btn--close main__link\">See all</Link>\r\n                                </div>\r\n                                <p className=\"main__subhead\">Found 1,354 ads in this category</p>\r\n                            </div>\r\n                            <div className=\"main__list\">{premium}</div>\r\n                            <div className=\"main__head\">\r\n                                <div>\r\n                                    <h2 className=\"heading heading__2 main__heading mb-5\">Usual ads</h2>\r\n                                    <p className=\"main__subhead\">Found 4,635 ads in this category</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"main__list\">{usualAds}</div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.data.data,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","E:\\dec-exp\\src\\containers\\Layout.js",["238"],"import React from 'react';\r\nimport Footer from './Footer';\r\nimport Navigation from './Navigation';\r\nimport Searchbar from '../components/Searchbar';\r\n\r\nconst Layout = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Navigation />\r\n                {props.children}\r\n            <Footer />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Layout;","E:\\dec-exp\\src\\components\\Filter.js",["239","240","241","242","243","244"],"E:\\dec-exp\\src\\containers\\Header.js",[],"E:\\dec-exp\\src\\components\\Searchbar.js",[],"E:\\dec-exp\\src\\components\\Logo.js",[],"E:\\dec-exp\\src\\components\\Categories.js",[],"E:\\dec-exp\\src\\components\\Card.js",[],"E:\\dec-exp\\src\\containers\\Footer.js",["245"],"import React from 'react';\r\n\r\nimport Logo from '../components/Logo';\r\nimport Language from '../components/Language';\r\n\r\nimport * as utils from '../utilities/utilities';\r\n\r\nconst Footer = props => {\r\n\r\n    const year = new Date().getFullYear();\r\n\r\n    const navs = ['Help', 'Enterprise Adverts', 'Terms of use', 'Privacy Policy', 'SBUY Guide', 'Security measures', 'Site map', 'Map of regions', 'Career', 'Feedback'];\r\n\r\n    const navItems = navs.map((el, i) => {\r\n        return (\r\n            <li className=\"footer__item\" key={i}>\r\n                <a href=\"#\" className=\"footer__link\">{el}</a>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer__head\">\r\n                <div className=\"container\">\r\n                    <div className=\"footer__headwrap\">\r\n                        <div className=\"navigation__item\">\r\n                            <svg className=\"footer__icon\" dangerouslySetInnerHTML={{__html: utils.use('home')}} />\r\n                            <h5 className=\"footer__heading\">Home</h5>\r\n                        </div>\r\n                        <Language class=\"navigation__item navigation__item--drop\" dropClass=\"dropdown--right-fix\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"footer__wrapper\">\r\n                    <div className=\"footer__body\">\r\n                        <div div className=\"footer__group\">\r\n                            <Logo class=\"footer__logo\" />\r\n                            <ul className=\"footer__list\">\r\n                                {navItems}\r\n                            </ul>\r\n                            <p className=\"footer__info\">\r\n                                For all questions, you can contact us<br/> at any convenient time by phone or email<br/>\r\n                                +998 (71) 240-60-50 <br/>\r\n                                sbuy@retail.uz\r\n                            </p>\r\n                        </div>\r\n                        <p className=\"footer__info\">{year} SBUY&copy;</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default React.memo(Footer);","E:\\dec-exp\\src\\components\\Adview.js",["246"],"import React, { Component, PureComponent } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { SwiperSlide, Swiper } from 'swiper/react';\r\nimport SwiperCore, { Scrollbar, Mousewheel, Pagination, Navigation } from 'swiper';\r\nimport Rating from 'react-rating';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport * as utils from '../utilities/utilities';\r\n\r\nimport avatar from '../assets/images/32.jpg';\r\nimport Backdrop from '../UI/Backdrop';\r\nimport Tooltip from '../UI/Tooltip';\r\n\r\nSwiperCore.use([Scrollbar, Mousewheel, Pagination, Navigation]);\r\n\r\nclass adview extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            index: null,\r\n            rating: 4.5,\r\n            showNum: false,\r\n            showMessageBar: false,\r\n            rotate: null,\r\n            message: '',\r\n            fullScreen: false,\r\n            swiperBegin: true,\r\n            swiperEnd: false,\r\n            activeSwiperImage: 0\r\n        }\r\n        this.categoryPath = `${this.props.match.params.category}/${this.props.match.params.subcategory}`;\r\n        this.id = this.props.match.params.id;\r\n\r\n        this.copyNumRef = React.createRef();\r\n        this.mesTitleRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Initial id: ' + this.id);\r\n        const index = this.props.data.findIndex(el => el.id === this.id);\r\n        if (index === -1) {\r\n            console.log('No such ad exists');\r\n        } else this.setState({ index }, () => console.log('Find index by id: ' + this.state.index));\r\n\r\n        const root = document.documentElement;\r\n        root.style.setProperty('--cat-item-transition', 'none');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.swiper.update();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.swiper.destroy();\r\n\r\n        const root = document.documentElement;\r\n        root.style.setProperty('--cat-item-transition', 'all .3s ease');\r\n    }\r\n\r\n    onNextImage = (img) => {\r\n        if (this.state.activeSwiperImage < img.length - 1) {\r\n            this.setState((prevState) => {\r\n                return { activeSwiperImage: prevState.activeSwiperImage + 1 }\r\n            })\r\n        } else this.setState({ activeSwiperImage: 0 });\r\n    }\r\n\r\n    onPrevImage = () => {\r\n        if (this.state.activeSwiperImage > 0) {\r\n            this.setState((prevState) => {\r\n                return { activeSwiperImage: prevState.activeSwiperImage - 1 }\r\n            })\r\n        }\r\n    }\r\n\r\n    onGoFullScreen = () => this.setState({ fullScreen: true });\r\n    onCloseFullScreen = () => this.setState({ fullScreen: false });\r\n\r\n    onReachBeginSwiper = () => this.setState({ swiperBegin: true, swiperEnd: false }, () => console.log(this.state.swiperBegin, this.state.swiperEnd));\r\n    onReachEndSwiper = () => this.setState({ swiperBegin: false, swiperEnd: true }, () => console.log(this.state.swiperBegin, this.state.swiperEnd));\r\n\r\n    onRotate = () => {\r\n        let i = 0;\r\n        const degrees = [90, 180, 270, 360];\r\n        if (this.state.rotate) {\r\n            i = degrees.findIndex(el => el === this.state.rotate) + 1;\r\n        }\r\n        if (i > degrees.length - 1) i = 0;\r\n        this.setState({ rotate: degrees[i] }, () => console.log(this.state.rotate));\r\n    }\r\n\r\n    onEnterMessage = (e) => {\r\n        this.setState({ message: e.target.value });\r\n    }\r\n\r\n    onSendMessage = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.message) {\r\n            this.mesTitleRef.current.textContent = 'Your message is sent!';\r\n            setTimeout(() => {\r\n                this.mesTitleRef.current.textContent = 'Write your message...';\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onShowNumber = () => {\r\n        this.setState({ showNum: true });\r\n    }\r\n\r\n    closePopup = () => {\r\n        this.props.history.replace('/' + this.categoryPath);\r\n    }\r\n\r\n    onShowMessageBar = () => this.setState({ showMessageBar: true });\r\n    onHideMessageBar = () => this.setState({ showMessageBar: false });\r\n\r\n    onCopyNum = (val) => {\r\n        const el = document.createElement('textarea');\r\n        el.value = val;\r\n        el.style.position = 'absolute';\r\n        el.style.left = '-9999px';\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        el.setSelectionRange(0, 99999);\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    onHideNum = () => this.setState({ showNum: false });\r\n    \r\n    onClickNext = () => {\r\n        if (this.state.index < this.props.data.length - 1) {\r\n            this.setState(prevState => {\r\n                return { index: prevState.index + 1 }\r\n            }, () => {\r\n                this.props.history.replace(`/${this.categoryPath}/${this.props.data[this.state.index].id}`);\r\n            });\r\n        }\r\n        else this.props.history.replace(`/${this.categoryPath}`);\r\n        if (this.state.activeSwiperImage > 0) this.setState({ activeSwiperImage: 0 });\r\n    }\r\n    \r\n    onClickPrev = () => {\r\n        if (this.state.index > 0) {\r\n            this.setState(prevState => {\r\n                return { index: prevState.index - 1 }\r\n            }, () => {\r\n                this.props.history.replace(`/${this.props.match.params.category}/${this.props.match.params.subcategory}/${this.props.data[this.state.index].id}`);\r\n            });\r\n        }\r\n        else this.props.history.replace(`/${this.categoryPath}`);\r\n        if (this.state.activeSwiperImage > 0) this.setState({ activeSwiperImage: 0 });\r\n    }\r\n\r\n    render() {\r\n        const category = `/${this.props.match.params.category}`;\r\n        const subcategory = this.props.match.params.subcategory;\r\n        console.log(subcategory, category);\r\n\r\n        let rotateDegClass = '';\r\n        if (this.state.rotate) rotateDegClass = `adview__rotate--${this.state.rotate}`;\r\n\r\n        const topGradientClass = ['adview__gradient adview__gradient--top'];\r\n        const bottomGradientClass = ['adview__gradient'];\r\n        if (this.state.swiperEnd) topGradientClass.push('adview__gradient--show');\r\n        if (this.state.swiperBegin) bottomGradientClass.push('adview__gradient--show');\r\n        \r\n        const ad = this.props.data[this.state.index];\r\n        if (!ad) return null;\r\n\r\n        const images = ad.img.map((el, i) => (\r\n            <SwiperSlide className={`adview__figmain ${rotateDegClass}`} key={i}>\r\n                <LazyLoadImage \r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    className=\"adview__img\"\r\n                    src={el}\r\n                    alt={i}\r\n                    />\r\n            </SwiperSlide>\r\n        ));\r\n\r\n        const adsFrom = this.props.data.map((el, i) => {\r\n            return (\r\n                <Link to=\"/\" className=\"adview__card adview__box adview__box--card\" key={i}>\r\n                    <figure className=\"adview__figure adview__figure--card mr-2\">\r\n                        <LazyLoadImage \r\n                            className=\"adview__img adview__img--card\"\r\n                            src={el.img[0]}\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                            />\r\n                    </figure>\r\n                    <div className=\"adview__group adview__group--col w-max afs\">\r\n                        <span className=\"adview__subheading adview__subheading--card mb-1\">{el.title}</span>\r\n                        <span className=\"adview__title mb-5\">{el.date}</span>\r\n                        <span className=\"adview__title mb-5\">{el.location}</span>\r\n                        <span className=\"price-tag\">{el.price}</span>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        })\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <header className=\"adview\">\r\n                    {/* <Backdrop click={this.closePopup} z={14}/> */}\r\n                        {this.state.fullScreen && \r\n                            <div className=\"adview__fullscreen\">\r\n                                <div className=\"container\">\r\n                                    <Backdrop z={1} click={this.onCloseFullScreen} />\r\n                                    <div className=\"adview__fullscreenwrap\">\r\n                                        <figure className=\"adview__figure adview__figure--full\">\r\n                                            <img src={ad.img[this.state.activeSwiperImage]} alt={ad.title} className=\"adview__img adview__img--full\" />\r\n                                        </figure>\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"adview__btn adview__btn--abs adview__btn--grey adview__btn--left\" onClick={() => this.onPrevImage()}>\r\n                                    <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-left')}} />\r\n                                </button>\r\n                                <button className=\"adview__btn adview__btn--abs adview__btn--grey adview__btn--right\" onClick={() => this.onNextImage(ad.img)}>\r\n                                    <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                        <Swiper \r\n                            className=\"adview__wrapper\"\r\n                            direction=\"vertical\"\r\n                            slidesPerView=\"auto\"\r\n                            freeMode\r\n                            scrollbar={{ el: '#scrollbar', draggable: true, snapOnRelease: false }}\r\n                            mousewheel\r\n                            simulateTouch={false}\r\n                            keyboard={{ enabled: true, onlyInViewport: true }}>\r\n                            <SwiperSlide className=\"adview__content\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"adview__head\">\r\n                                        <div className=\"adview__group\">\r\n                                            <Link to=\"/\" className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">Home</Link>\r\n                                            <Link to={category} className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">{utils.capitalize(utils.parseUrl(utils.formatRouteString(category)))}</Link>\r\n                                            <Link to={`${category}/${subcategory}`} className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">{utils.capitalize(utils.parseUrl(utils.formatRouteString(subcategory)))}</Link>\r\n                                            <span className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto\">{ad.title}</span>\r\n                                        </div>\r\n                                        <div className=\"adview__group\">\r\n                                            <button className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto afs\" onClick={() => this.onClickPrev()}>\r\n                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-left')}} />\r\n                                                Previous Ad\r\n                                            </button>\r\n                                            <button className=\"adview__btn adview__btn--rel adview__btn--bggrey adview__btn--routes DTool pos-rel wh-auto afs\" onClick={() => this.onClickNext()}>\r\n                                                Next Ad\r\n                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                            </button>\r\n                                            <button className=\"adview__btn adview__btn--rel adview__btn--bggrey DTool pos-rel DTool DTool--bottom no-transition\" onClick={() => this.closePopup()}>\r\n                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                                <Tooltip>Close</Tooltip>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"adview__main\">\r\n                                        <div className=\"adview__left\">\r\n                                            <div className=\"adview__box adview__box--main\">\r\n                                                <Swiper \r\n                                                    className=\"adview__swiper\"\r\n                                                    slidesPerView={1}\r\n                                                    navigation={{nextEl: '#right', prevEl: '#left', disabledClass: 'adview__btn--disabled'}}\r\n                                                    pagination={{ el: '.swiper-pagination' }}\r\n                                                    onSwiper={(sw) => this.swiper = sw}\r\n                                                    simulateTouch={false}\r\n                                                    preloadImages\r\n                                                    updateOnImagesReady\r\n                                                    onImagesReady={() => this.swiper.update()}\r\n                                                    onSlideChange={(sw) => this.setState({ activeSwiperImage: sw.activeIndex })}\r\n                                                    preventInteractionOnTransition={true}>\r\n                                                    {images}\r\n                                                    <button className=\"adview__btn adview__btn--abs adview__btn--left\" id=\"left\">\r\n                                                        <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-left')}} />\r\n                                                    </button>\r\n                                                    <button className=\"adview__btn adview__btn--abs adview__btn--right\" id=\"right\">\r\n                                                        <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                                    </button>\r\n                                                    <div className=\"adview__group adview__group--abs\">\r\n                                                        <button className=\"adview__btn DTool adview__btn--rel adview__btn--abs adview__btn--corner mr-2 pos-rel no-transition\" onClick={() => this.onRotate()}>\r\n                                                            <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('rotate-cw')}} />\r\n                                                            <Tooltip>Rotate the photo</Tooltip>\r\n                                                        </button>\r\n                                                        <button className=\"adview__btn DTool adview__btn--rel adview__btn--abs adview__btn--corner pos-rel no-transition\" onClick={() => this.onGoFullScreen()}>\r\n                                                            <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('maximize')}} />\r\n                                                            <Tooltip>Full Screen</Tooltip>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div className=\"swiper-pagination\"></div>\r\n                                                </Swiper>\r\n                                                <div className=\"adview__details mb-2\">\r\n                                                    <div className=\"adview__group sb\">\r\n                                                        <div className=\"adview__headingwrap\">\r\n                                                            <h1 className=\"heading heading__1\" data-premium={ad.premium}>\r\n                                                                {ad.title}\r\n                                                                <span className=\"badge ml-1\">\r\n                                                                    Promoted\r\n                                                                </span>\r\n                                                            </h1>\r\n                                                            <div className=\"adview__subheading mb-1\">\r\n                                                                <p className=\"adview__item adview__item--location\">{ad.date}, {ad.location}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"adview__group sb afe\">\r\n                                                        <div>\r\n                                                            <p className=\"price-tag adview__item adview__item--price\">{ad.price}</p>\r\n                                                        </div>\r\n                                                        <div className=\"adview__group\">\r\n                                                            <button className=\"adview__btn adview__btn--rel DTool pos-rel no-transition\">\r\n                                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('share')}} />\r\n                                                                <Tooltip>Share</Tooltip>\r\n                                                            </button>\r\n                                                            <button className=\"adview__btn adview__btn--rel DTool pos-rel no-transition\" data-favorite={ad.favorite}>\r\n                                                                <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('heart')}} />\r\n                                                                <Tooltip>{!ad.favorite ? 'Add to favourites' : 'Remove from favorites'}</Tooltip>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"adview__box adview__box--description\">\r\n                                                <div className=\"adview__subhead sb mb-2\">\r\n                                                    <h2 className=\"heading heading__2 adview__subheading\">Description</h2>\r\n                                                    <p className=\"adview__title\">Number of views: 153&nbsp;&nbsp;|&nbsp;&nbsp;Edited at 13:16</p>\r\n                                                </div>\r\n                                                <div className=\"adview__group adview__group--col afs mb-1\">\r\n                                                    <p className=\"adview__title adview__title--mid mb-1\">Secifications:</p>\r\n                                                    <ul className=\"adview__group adview__group--wrap\">\r\n                                                        <li className=\"tag tag__types mb-1\">Camera: 100MP</li>\r\n                                                        <li className=\"tag tag__types mb-1\">CPU: Snapdragon 865</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Battery: 5000mAh</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Condition: New</li>\r\n                                                        <li className=\"tag tag__types mb-1\">Color: Grey</li>\r\n                                                        <li className=\"tag tag__types mb-1\">ROM: 128GB</li>\r\n                                                        <li className=\"tag tag__types mb-1\">RAM: 8GB</li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                                <div className=\"adview__group adview__group--col afs\">\r\n                                                    <p className=\"adview__title adview__title--mid mb-1\">Personalized description:</p>\r\n                                                    <p className=\"adview__text\">\r\n                                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras viverra odio vel risus consequat feugiat. Vivamus nec lorem auctor felis suscipit ullamcorper sit amet non orci. Sed ornare justo eu arcu convallis venenatis. Sed luctus maximus viverra. Nullam sit amet urna fermentum, dignissim urna semper, auctor mi. Mauris pulvinar porta augue, sodales ultricies urna placerat vitae. \r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"adview__right\">\r\n                                            <div className=\"adview__box adview__box--user\">\r\n                                                <figure className=\"adview__figure adview__item\">\r\n                                                    <img className=\"adview__img\" src={avatar} alt={ad.id} />\r\n                                                </figure>\r\n                                                <Link to=\"/user/john_doe\" className=\"adview__item adview__item--name anim-link pos-rel no-transition\">John Doe</Link>\r\n                                                <span className=\"adview__item adview__item--titled\">\r\n                                                    <span className=\"adview__title mb-5\">Enterprise</span>\r\n                                                    <Link to=\"/company\" className=\"adview__item adview__item--lined\">Intech Ltd.</Link>\r\n                                                </span>\r\n                                                <span className=\"adview__item adview__item--titled\">\r\n                                                    <span className=\"adview__title mb-5\">Reviews:</span> \r\n                                                    <span className=\"adview__item\">\r\n                                                        <Rating \r\n                                                            className=\"adview__item--ratingbar\"\r\n                                                            initialRating={this.state.rating} \r\n                                                            fractions={2} \r\n                                                            emptySymbol={ <svg className=\"rating\" dangerouslySetInnerHTML={{__html: utils.useStars('star-empty')}} /> }\r\n                                                            fullSymbol={ <svg className=\"rating rating--fill\" dangerouslySetInnerHTML={{__html: utils.useStars('star-full')}} /> }\r\n                                                            onChange={(r) => this.setState({ rating: r })}\r\n                                                            />\r\n                                                        <span>{(Math.round(this.state.rating * 100) / 100).toFixed(1)}</span>\r\n                                                    </span>\r\n                                                </span>\r\n                                                <div className=\"adview__item pos-rel no-transition\">\r\n                                                    <button className=\"adview__btn--main btn btn__primary\" onClick={() => this.onShowNumber()}>\r\n                                                        Phone number\r\n                                                        <svg className=\"adview__icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('phone-outgoing')}} />\r\n                                                    </button>\r\n                                                    {this.state.showNum && \r\n                                                        <React.Fragment>\r\n                                                            <Backdrop z={98} click={this.onHideNum} />\r\n                                                            <Tooltip class=\"adview__numbox\" click={this.onHideNum}>\r\n                                                                <span className=\"adview__number\">+684 655985 2656</span>\r\n                                                                <button className=\"adview__btn adview__btn--clip ml-1\" onClick={() => this.onCopyNum('+684 655985 2656')} title=\"Copy number\">\r\n                                                                    <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('clipboard')}} />\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                        </React.Fragment>\r\n                                                    }\r\n                                                </div>\r\n                                                <button className=\"adview__btn--main adview__item btn btn__secondary\" onClick={() => this.onShowMessageBar()}>\r\n                                                    Write a message\r\n                                                    <svg className=\"adview__icon icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('edit-2')}} />\r\n                                                </button>\r\n                                            </div>\r\n                                            {this.state.showMessageBar && \r\n                                                <div className=\"adview__box adview__box--message\">\r\n                                                    <div className=\"adview__group adview__group--sb mb-1\">\r\n                                                        <p className=\"adview__title adview__title--big\" ref={this.mesTitleRef}>Write your message:</p>\r\n                                                        <button className=\"adview__btn adview__btn--sm adview__btn--rel pos-rel\" onClick={() => this.onHideMessageBar()}>\r\n                                                            <svg className=\"adview__icon\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <form className=\"adview__form\" onSubmit={(e) => this.onSendMessage(e)}>\r\n                                                        <textarea autoFocus required className=\"adview__input mr-5\" placeholder=\"Message...\" type=\"text\" onChange={(e) => this.onEnterMessage(e)} value={this.state.message} />\r\n                                                        <button className=\"wh-auto btn btn__primary btn__primary--outline\">\r\n                                                            Send\r\n                                                            <svg className=\"adview__icon icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('send')}} />\r\n                                                        </button>\r\n                                                    </form>\r\n                                                </div>\r\n                                            }\r\n                                            <Swiper\r\n                                                className=\"adview__cardscontainer\"\r\n                                                direction=\"vertical\"\r\n                                                slidesPerView=\"auto\"\r\n                                                freeMode\r\n                                                mousewheel\r\n                                                nested\r\n                                                simulateTouch={false}\r\n                                                keyboard={{ enabled: true, onlyInViewport: true }}\r\n                                                onReachBeginning={() => this.onReachBeginSwiper()}\r\n                                                onReachEnd={() => this.onReachEndSwiper()}\r\n                                                scrollbar={{ el: '#scrollbar-2', draggable: true, snapOnRelease: false }}\r\n                                                >\r\n                                                <span className={topGradientClass.join(' ')}></span>\r\n                                                <span className={bottomGradientClass.join(' ')}></span>\r\n                                                <SwiperSlide className=\"adview__cards\">\r\n                                                    {adsFrom}\r\n                                                    <button className=\"adview__card adview__card--btn\">See all</button>\r\n                                                </SwiperSlide>\r\n                                                <div className=\"swiper-scrollbar\" id=\"scrollbar-2\"></div>\r\n                                            </Swiper>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                        <div className=\"swiper-scrollbar\" id=\"scrollbar\"></div>\r\n                    </Swiper>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(adview);\r\n\r\n\r\n// var rgb = getAverageRGB(document.getElementById('i'));\r\n// document.body.style.backgroundColor = 'rgb('+rgb.r+','+rgb.g+','+rgb.b+')';\r\n\r\n// function getAverageRGB(imgEl) {\r\n\r\n// var blockSize = 5, // only visit every 5 pixels\r\n//     defaultRGB = {r:0,g:0,b:0}, // for non-supporting envs\r\n//     canvas = document.createElement('canvas'),\r\n//     context = canvas.getContext && canvas.getContext('2d'),\r\n//     data, width, height,\r\n//     i = -4,\r\n//     length,\r\n//     rgb = {r:0,g:0,b:0},\r\n//     count = 0;\r\n    \r\n// if (!context) {\r\n//     return defaultRGB;\r\n// }\r\n\r\n// height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;\r\n// width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;\r\n\r\n// context.drawImage(imgEl, 0, 0);\r\n\r\n// try {\r\n//     data = context.getImageData(0, 0, width, height);\r\n// } catch(e) {\r\n//     /* security error, img on diff domain */alert('x');\r\n//     return defaultRGB;\r\n// }\r\n\r\n// length = data.data.length;\r\n\r\n// while ( (i += blockSize * 4) < length ) {\r\n//     ++count;\r\n//     rgb.r += data.data[i];\r\n//     rgb.g += data.data[i+1];\r\n//     rgb.b += data.data[i+2];\r\n// }\r\n\r\n// // ~~ used to floor values\r\n// rgb.r = ~~(rgb.r/count);\r\n// rgb.g = ~~(rgb.g/count);\r\n// rgb.b = ~~(rgb.b/count);\r\n\r\n// return rgb;\r\n\r\n// }","E:\\dec-exp\\src\\components\\Language.js",[],"E:\\dec-exp\\src\\UI\\LoadingScreen.js",[],"E:\\dec-exp\\src\\UI\\Backdrop.js",[],"E:\\dec-exp\\src\\UI\\Tooltip.js",[],"E:\\dec-exp\\src\\containers\\Navigation.js",["247","248","249","250","251"],"E:\\dec-exp\\src\\containers\\Post.js",["252","253","254"],"import React, { PureComponent } from \"react\";\r\nimport { LazyLoadComponent } from \"react-lazy-load-image-component\";\r\n\r\nimport audi from '../assets/images/devon-janse-van-rensburg-xJhma-g2cnA-unsplash-compressed (3).jpg';\r\nimport * as utils from '../utilities/utilities';\r\nimport Backdrop from '../UI/Backdrop';\r\nimport categories from '../store/Categories/categories';\r\nimport Dropdown from \"../components/Dropdown\";\r\n\r\nclass Publish extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            types: {\r\n                sell: 'Sell',\r\n                exchange: 'Exchange',\r\n                give: 'Give away'\r\n            },\r\n            business_type: 'Individual',\r\n            type: 'sell',\r\n            mainTitle: '',\r\n            description: '',\r\n            currency: 'uzsom',\r\n            categories,\r\n            showCat: false,\r\n            selectedCat: null,\r\n            activeAfter: null,\r\n            numbers: ['+998994886928', '+998976852565'],\r\n            activeCat: null,\r\n            filterObj: null,\r\n        };\r\n\r\n        this.fileRef = React.createRef();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.activeAfter !== prevState.activeAfter) {\r\n            const category = utils.slug(this.state.categories[this.state.activeAfter].val);\r\n\r\n            this.setState({ selectedCat: null }, \r\n                () => {\r\n                    import(`../store/PostFilters/${category}`)\r\n                    .then(filter => {\r\n                        this.setState({ filterObj: filter.default });\r\n                    })\r\n                    .catch(er => {\r\n                        \r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n    onInputDescription = (e) => this.setState({ description: e.target.value });\r\n    onInputTitle = (e) => this.setState({ mainTitle: e.target.value });\r\n\r\n    onInputNumber = (e, index) => {\r\n        this.setState(prevState => {\r\n            console.log(prevState.numbers)\r\n            const numbers = prevState.numbers.map((el, i) => {\r\n                if (i === index) return el = e.target.value;\r\n                else return el;\r\n            });\r\n            return { numbers };\r\n        });\r\n    }\r\n\r\n    onChangeCurrency = (c) => this.setState({ currency: c });\r\n    onChangeBusinessType = (type) => this.setState({ business_type: type });\r\n    onChangeAdType = (type) => this.setState({ type });\r\n\r\n    onOpenCatPop = () => this.setState({ showCat: true });\r\n    onCloseCatPop = () => this.setState({ showCat: false });\r\n\r\n    setActiveCat = (cat) => this.setState({ activeCat: cat, activeAfter: cat });\r\n    unsetActiveCat = () => this.setState({ activeCat: null });\r\n\r\n    onSelectCat = (subCat) => {\r\n        this.setState({\r\n            selectedCat: subCat\r\n        }, () => this.setState({ showCat: false, activeCat: null }));\r\n    }\r\n\r\n    appendImage = (el, files) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.readAsDataURL(files);\r\n        reader.onload = () => {\r\n            el.innerHTML = '';\r\n            el.style.backgroundImage = `url(${reader.result})`;\r\n        };\r\n    }\r\n\r\n    clearImages = (el) => {\r\n        el.innerHTML = '';\r\n        // el.\r\n    };\r\n\r\n    onImageUpload = () => {\r\n        const files = this.fileRef.current.files;\r\n\r\n        if (files.length) {\r\n            let photos = Array.from(files).slice(0, 7);\r\n            console.log(photos);\r\n            const mainPhoto = document.querySelector('.post__figure--main');\r\n            const subPhotoContainers = Array.from(document.querySelectorAll('.post__figure--small'));\r\n            const subPhotos = Array.from(photos).slice(1);\r\n            \r\n            this.appendImage(mainPhoto, photos[0]);\r\n            \r\n            subPhotos.forEach((el, i) => this.appendImage(subPhotoContainers[i], el));\r\n\r\n            const formatData = new FormData();\r\n            \r\n            for (const img of files) {\r\n                formatData.append('photos[]', img);\r\n                \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const typesArr = [];\r\n        for (let key in this.state.types) {\r\n            typesArr.push({\r\n                id: key,\r\n                value: this.state.types[key]\r\n            })\r\n        }\r\n        const types = typesArr.map(el => {\r\n            return (\r\n                <div className=\"dropdown__item\" key={el.id} onClick={() => this.onChangeAdType(el.id)}>\r\n                    <div className=\"dropdown__link post__dropitem\">{el.value}</div>\r\n                </div>\r\n            );\r\n        })\r\n\r\n        const catItemsArr = [];\r\n        for (let key in this.state.categories) {\r\n            catItemsArr.push({\r\n                id: key,\r\n                title: this.state.categories[key].val,\r\n                icon: this.state.categories[key].icon\r\n            });\r\n        }\r\n\r\n        const catItems = catItemsArr.map((el) => {\r\n            return (\r\n                <div \r\n                    className=\"categories__item\"\r\n                    key={el.id}\r\n                    onClick={() => this.setActiveCat(el.id)}>\r\n                    <div className=\"categories__link\">\r\n                        <div className=\"categories__group\">\r\n                            <svg className=\"categories__icon categories__icon--cat\" dangerouslySetInnerHTML={{__html: utils.useCat(el.icon)}} />\r\n                            {el.title}\r\n                        </div>\r\n                        <svg className=\"categories__icon categories__icon--arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        let subOptions = null;\r\n        let inputItems = null;\r\n        if (this.state.filterObj && this.state.selectedCat) {\r\n            subOptions = this.state.filterObj.items[utils.slug(this.state.selectedCat)].sub.map((cat, catIndex) => {\r\n                const dropItems = cat.items.map((el, i) => {\r\n                    return (\r\n                        <div className=\"dropdown__item\" key={i}>\r\n                            <div className=\"dropdown__link post__dropitem\">{utils.capitalize(el)}</div>\r\n                        </div>\r\n                    );\r\n                });\r\n\r\n                return (\r\n                    <React.Fragment key={catIndex}>\r\n                        <p className=\"post__title mb-1\">{cat.title}</p>\r\n                        <div className=\"post__box\">\r\n                            <div className=\"post__input post__input--cat\" tabIndex=\"0\">\r\n                                {cat.title}\r\n                                <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                            </div>\r\n                            <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                {dropItems}\r\n                            </Dropdown>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )\r\n            });\r\n        \r\n            inputItems = this.state.filterObj.items[utils.slug(this.state.selectedCat)].inputs.map((el, i) => {\r\n                return (\r\n                    <div className=\"mb-15\" key={i}>\r\n                        <p className=\"post__title mb-1\">{el.title}</p>\r\n                        <input type=\"text\" placeholder={el.title} className=\"post__input\" />\r\n                    </div>\r\n                );\r\n            });\r\n        }\r\n        \r\n        let subItems = null;\r\n        if (this.state.activeCat) {\r\n            subItems = this.state.categories[this.state.activeCat].subItems.map((el, i) => {\r\n                return (\r\n                    <li className=\"categories__subitem\" key={i}>\r\n                        <div className=\"categories__link categories__link--sub\" onClick={() => this.onSelectCat(el)}>\r\n                            <svg className=\"categories__icon categories__icon--sub\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                            {el}\r\n                        </div>\r\n                    </li>\r\n                );\r\n            });\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"post\">\r\n                    <div className=\"post__wrapper\">\r\n                        <div className=\"container\">\r\n                            <div className=\"post__head\">\r\n                                <h2 className=\"heading heading__2 mb-1\">Post new add</h2>\r\n                                <span className=\"post__text\">\r\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed id tellus a eros vulputate euismod in at orci. Ut felis ipsum, bibendum vitae elit viverra, consectetur tincidunt lorem. Donec lectus.\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"post__main\">\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">Add photos</p>\r\n                                    <div className=\"post__uploadbox\" onClick={() => this.fileRef.current.click()}>\r\n                                        <input \r\n                                            className=\"post__input d-none\" \r\n                                            type=\"file\" \r\n                                            multiple \r\n                                            ref={this.fileRef} \r\n                                            onChange={() => this.onImageUpload()} />\r\n                                        <figure className=\"post__figure post__figure--main\">\r\n                                            <svg className=\"post__icon post__icon--main mb-1\" dangerouslySetInnerHTML={{__html: utils.use('camera')}} />\r\n                                            <span className=\"post__prompt\">Click or drag here to uload main photo</span>\r\n                                        </figure>\r\n                                        <div className=\"post__row\">\r\n                                            <figure className=\"post__figure post__figure--small\">\r\n                                                <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                            </figure>\r\n                                            <figure className=\"post__figure post__figure--small\">\r\n                                                <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                            </figure>\r\n                                            <figure className=\"post__figure post__figure--small\">\r\n                                                <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                            </figure>\r\n                                            <figure className=\"post__figure post__figure--small\">\r\n                                                <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                            </figure>\r\n                                            <figure className=\"post__figure post__figure--small\">\r\n                                                <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                            </figure>\r\n                                            <figure className=\"post__figure post__figure--small\">\r\n                                                <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                            </figure>\r\n                                        </div>\r\n                                    </div>\r\n                                    <p className=\"post__hint post__hint--left mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla tincidunt nec nibh non porta. Donec.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">Main title</p>\r\n                                    <label className=\"post__label\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"post__input post__input--title\"\r\n                                            placeholder=\"Enter Ad title\"\r\n                                            onChange={(e) => this.onInputTitle(e)}\r\n                                            value={this.state.mainTitle} \r\n                                            maxLength=\"30\" />\r\n                                        <span className=\"post__counter mt-1\">{30 - this.state.mainTitle.length} characters left</span>\r\n                                    </label>\r\n                                    <p className=\"post__hint mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam maximus nibh vel hendrerit maximus. Proin imperdiet elit ipsum, in maximus lectus faucibus in. Praesent eu nunc ut quam mattis rhoncus.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">Category</p>\r\n                                    <button className=\"post__input post__input--cat post__input--cat-main\" onClick={() => this.onOpenCatPop()}>\r\n                                        <span className=\"post__val\">\r\n                                            {this.state.activeAfter && <svg className=\"post__icon post__icon--cat icon__dark mr-1\" dangerouslySetInnerHTML={{__html: utils.useCat(this.state.categories[this.state.activeAfter].icon)}} />}\r\n                                            {this.state.selectedCat ? this.state.selectedCat : 'Select category'}\r\n                                        </span>\r\n                                        <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-right')}} />\r\n                                    </button>\r\n                                    {this.state.activeAfter &&\r\n                                        <React.Fragment>\r\n                                            <div className=\"post__catselected post__input mt-1\" onClick={() => this.onOpenCatPop()}>\r\n                                                <ul className=\"post__list\">\r\n                                                    <li className=\"post__item\">{this.state.categories[this.state.activeAfter].val}</li>\r\n                                                    <li className=\"post__item\">{this.state.selectedCat}</li>\r\n                                                </ul>\r\n                                                <button className=\"post__btn post__btn--catitems\">\r\n                                                    <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevrons-right')}} />\r\n                                                </button>\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                    <p className=\"post__hint mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla tincidunt nec nibh non porta. Donec.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"post__group post__group--details m-0\">\r\n                                    <div className=\"post__group\">\r\n                                        <div className=\"mb-15\">\r\n                                            <p className=\"post__title mb-1\">Price</p>\r\n                                            <div className=\"post__box\">\r\n                                                <div className=\"post__input post__input--cat\" tabIndex=\"0\">\r\n                                                    {this.state.types[this.state.type]}\r\n                                                    <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                                </div>\r\n                                                <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                                    {types}\r\n                                                </Dropdown>\r\n                                            </div>\r\n                                            {this.state.type === 'sell' &&\r\n                                                <div className=\"post__double-form mb-1\">\r\n                                                    <input type=\"text\" placeholder=\"Price\" className=\"post__input post__input--price mr-1\" />\r\n                                                    <div className=\"post__box\">\r\n                                                        <div className=\"post__input post__input--cat post__input--cur\" tabIndex=\"0\">\r\n                                                            {this.state.currency.toUpperCase()}\r\n                                                            <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                                        </div>\r\n                                                        <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                                            <div className=\"dropdown__item\" onClick={() => this.onChangeCurrency('usd')}>\r\n                                                                <div className=\"dropdown__link post__dropitem\">USD</div>\r\n                                                            </div>\r\n                                                            <div className=\"dropdown__item\" onClick={() => this.onChangeCurrency('uzsom')}>\r\n                                                                <div className=\"dropdown__link post__dropitem\">UZSOM</div>\r\n                                                            </div>\r\n                                                        </Dropdown>\r\n                                                    </div>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                        <p className=\"post__title mb-1\">Type of business</p>\r\n                                        <div className=\"post__box\">\r\n                                            <div className=\"post__input post__input--cat\" tabIndex=\"0\">\r\n                                                {utils.capitalize(this.state.business_type)}\r\n                                                <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                            </div>\r\n                                            <Dropdown class=\"dropdown--full dropdown--close dropdown--sm-s post__dropdown\">\r\n                                                <div className=\"dropdown__item\" onClick={() => this.onChangeBusinessType('individual')}>\r\n                                                    <div className=\"dropdown__link post__dropitem\">Individual</div>\r\n                                                </div>\r\n                                                <div className=\"dropdown__item\" onClick={() => this.onChangeBusinessType('business')}>\r\n                                                    <div className=\"dropdown__link post__dropitem\">Business</div>\r\n                                                </div>\r\n                                            </Dropdown>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"post__group\">\r\n                                        {subOptions}\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"post__group\">\r\n                                        {/* <p className=\"post__title mb-1\">Color</p>\r\n                                        <div className=\"post__input post__input--cat mb-15\" tabIndex=\"0\">\r\n                                            White\r\n                                            <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                        </div>\r\n                                        <p className=\"post__title mb-1\">Condition</p>\r\n                                        <div className=\"post__input post__input--cat mb-15\" tabIndex=\"0\">\r\n                                            Medium\r\n                                            <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n                                        </div> */}\r\n                                        {/* <div className=\"mb-15\">\r\n                                            <p className=\"post__title mb-1\">Engine volume</p>\r\n                                            <input type=\"text\" placeholder=\"Engine volume\" className=\"post__input\" />\r\n                                        </div>\r\n                                        <div className=\"mb-15\">\r\n                                            <p className=\"post__title mb-1\">Year of manufacture</p>\r\n                                            <input type=\"text\" placeholder=\"Year of manufacture\" className=\"post__input mb-1\" />\r\n                                        </div> */}\r\n                                        {inputItems}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"post__group post__group--des\">\r\n                                    <p className=\"post__title mb-1\">Personalized description</p>\r\n                                    <label className=\"post__label\">\r\n                                        <textarea \r\n                                            className=\"post__input post__input--des\" \r\n                                            placeholder=\" \" \r\n                                            value={this.state.description}\r\n                                            onChange={(e) => this.onInputDescription(e)}\r\n                                            maxLength=\"4500\"></textarea>\r\n                                        <span className=\"post__counter mt-1\">{4500 - this.state.description.length} characters left</span>\r\n                                    </label>\r\n                                    <p className=\"post__hint mt-1\">\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In id nulla porta, rutrum enim eget, luctus neque. Cras scelerisque imperdiet.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"post__head post__head--doubleline\">\r\n                                <h2 className=\"heading heading__2 mb-1\">Contact details</h2>\r\n                                <span className=\"post__text\">\r\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc mattis.\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"post__main\">\r\n                                <div className=\"post__group\">\r\n                                    <p className=\"post__title mb-1\">Contact numbers</p>\r\n                                    <div className=\"post__double-form\">\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            placeholder=\"Your contact number\" \r\n                                            className=\"post__input post__input--singlebtn mr-1\" \r\n                                            value={this.state.numbers[0]} \r\n                                            onChange={(e) => this.onInputNumber(e, 0)} \r\n                                            maxLength={12} />\r\n                                        <button className=\"post__input post__input--btn post__input--cat\">\r\n                                            Add\r\n                                            <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                        </button>\r\n                                    </div>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        placeholder=\"Your contact number\" \r\n                                        className=\"post__input post__input--singlebtn mb-15\" \r\n                                        value={this.state.numbers[1]} \r\n                                        onChange={(e) => this.onInputNumber(e, 1)} \r\n                                        maxLength={12} />\r\n                                    <p className=\"post__title mb-1 mt-15\">Email address</p>\r\n                                    <input type=\"text\" placeholder=\"Your email address (optional)\" className=\"post__input mb-15\" />\r\n                                    <p className=\"post__title mb-1\">Contact Name</p>\r\n                                    <input type=\"text\" placeholder=\"Your contact name\" className=\"post__input mb-15\" />\r\n                                    <p className=\"post__title mb-1\">Region</p>\r\n                                    <input type=\"text\" placeholder=\"Your region\" className=\"post__input mb-15\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"post__footer\">\r\n                            <div className=\"container\">\r\n                                <div className=\"post__footwrap\">\r\n                                    <button className=\"btn post__btn-main btn__primary\">\r\n                                        Post\r\n                                        <svg className=\"icon ml-5\" dangerouslySetInnerHTML={{__html: utils.use('check-circle')}} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {this.state.showCat &&\r\n                    <div className=\"categories__container\">\r\n                        <Backdrop z={96} click={this.onCloseCatPop} />\r\n                        {this.state.activeCat && <Backdrop z={9} click={this.unsetActiveCat} />}\r\n                        <div className=\"categories categories--fix\">\r\n                            <ul className=\"categories__list categories__list--select\">\r\n                                {catItems}\r\n                            </ul>\r\n                            {this.state.activeCat && \r\n                                <div className=\"categories__panel\">\r\n                                    <div className=\"categories__subhead\">\r\n                                        <h2 className=\"categories__heading categories__heading--sub\">\r\n                                            {this.state.categories[this.state.activeCat].val}\r\n                                            <svg className=\"categories__icon--large\" dangerouslySetInnerHTML={{__html: utils.useCat(this.state.categories[this.state.activeCat].icon)}} />\r\n                                        </h2>\r\n                                        <button className=\"categories__btn categories__btn--sub\" onClick={() => this.unsetActiveCat()}>\r\n                                            <svg className=\"categories__icon categories__icon--close\" dangerouslySetInnerHTML={{__html: utils.use('x')}} />\r\n                                        </button>\r\n                                    </div>\r\n                                    <ul className=\"categories__sublist\">\r\n                                        {subItems}\r\n                                    </ul>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Publish;\r\n\r\n// {/* <button className=\"post__btn btn btn__secondary btn__secondary--outline\">\r\n//     Premiumalize\r\n//     <svg className=\"icon--dark icon icon--8 ml-5\" dangerouslySetInnerHTML={{__html: utils.use('thumbs-up')}} />\r\n// </button> */}\r\n\r\n{/* <figure className=\"post__figure post__figure--main\">\r\n                                            <svg className=\"post__icon post__icon--main mb-1\" dangerouslySetInnerHTML={{__html: utils.use('camera')}} />\r\n                                            <span className=\"post__prompt\">Click or drag here to uload main photo</span>\r\n                                            <img src={audi} className=\"post__img\" alt=\"audi\" />\r\n                                        </figure>\r\n                                        <div className=\"post__row\">\r\n                                            <figure className=\"post__figure post__figure--small\">\r\n                                                <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                            </figure>\r\n                                            <figure className=\"post__figure post__figure--small\">\r\n                                                <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                            </figure>\r\n                                            <figure className=\"post__figure post__figure--small\">\r\n                                                <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                            </figure>\r\n                                            <figure className=\"post__figure post__figure--small\">\r\n                                                <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                            </figure>\r\n                                            <figure className=\"post__figure post__figure--small\">\r\n                                                <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                            </figure>\r\n                                            <figure className=\"post__figure post__figure--small\">\r\n                                                <svg className=\"post__icon\" dangerouslySetInnerHTML={{__html: utils.use('plus')}} />\r\n                                            </figure>\r\n                                        </div> */}\r\n\r\n\r\ndocument.querySelectorAll(\".drop-zone__input\").forEach((inputElement) => {\r\n    const dropZoneElement = inputElement.closest(\".drop-zone\");\r\n  \r\n    dropZoneElement.addEventListener(\"click\", (e) => {\r\n      inputElement.click();\r\n    });\r\n  \r\n    inputElement.addEventListener(\"change\", (e) => {\r\n      if (inputElement.files.length) {\r\n        updateThumbnail(dropZoneElement, inputElement.files[0]);\r\n      }\r\n    });\r\n  \r\n    dropZoneElement.addEventListener(\"dragover\", (e) => {\r\n      e.preventDefault();\r\n      dropZoneElement.classList.add(\"drop-zone--over\");\r\n    });\r\n    \r\n    dropZoneElement.addEventListener(\"drop\", (e) => {\r\n      e.preventDefault();\r\n  \r\n      if (e.dataTransfer.files.length) {\r\n        inputElement.files = e.dataTransfer.files;\r\n        updateThumbnail(dropZoneElement, e.dataTransfer.files[0]);\r\n      }\r\n  \r\n      dropZoneElement.classList.remove(\"drop-zone--over\");\r\n    });\r\n  \r\n    [\"dragleave\", \"dragend\"].forEach((type) => {\r\n      dropZoneElement.addEventListener(type, (e) => {\r\n        dropZoneElement.classList.remove(\"drop-zone--over\");\r\n      });\r\n    });\r\n  \r\n    \r\n  });\r\n  \r\n  /**\r\n   * Updates the thumbnail on a drop zone element.\r\n   *\r\n   * @param {HTMLElement} dropZoneElement\r\n   * @param {File} file\r\n   */\r\n  function updateThumbnail(dropZoneElement, file) {\r\n    let thumbnailElement = dropZoneElement.querySelector(\".drop-zone__thumb\");\r\n  \r\n    // First time - remove the prompt\r\n    if (dropZoneElement.querySelector(\".drop-zone__prompt\")) {\r\n      dropZoneElement.querySelector(\".drop-zone__prompt\").remove();\r\n    }\r\n  \r\n    // First time - there is no thumbnail element, so lets create it\r\n    if (!thumbnailElement) {\r\n      thumbnailElement = document.createElement(\"div\");\r\n      thumbnailElement.classList.add(\"drop-zone__thumb\");\r\n      dropZoneElement.appendChild(thumbnailElement);\r\n    }\r\n  \r\n    thumbnailElement.dataset.label = file.name;\r\n  \r\n    // Show thumbnail for image files\r\n    if (file.type.startsWith(\"image/\")) {\r\n      const reader = new FileReader();\r\n  \r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        thumbnailElement.style.backgroundImage = `url('${reader.result}')`;\r\n      };\r\n    } else {\r\n      thumbnailElement.style.backgroundImage = null;\r\n    }\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n/* <div className=\"post__group\">\r\n    <p className=\"post__title mb-1\">Model</p>\r\n    <div className=\"post__input post__input--cat mb-15\" tabIndex=\"0\">\r\n        Cevrolet\r\n        <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n    </div>\r\n    <p className=\"post__title mb-1\">Transmission</p>\r\n    <div className=\"post__input post__input--cat mb-15\" tabIndex=\"0\">\r\n        Manual\r\n        <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n    </div>\r\n    <p className=\"post__title mb-1\">Type</p>\r\n    <div className=\"post__input post__input--cat mb-15\" tabIndex=\"0\">\r\n        Hatchback\r\n        <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n    </div>\r\n    <p className=\"post__title mb-1\">Engine volume</p>\r\n    <input type=\"text\" placeholder=\"Engine volume\" className=\"post__input mb-1\" />\r\n    <p className=\"post__title mb-1\">Year of manufacture</p>\r\n    <input type=\"text\" placeholder=\"Year of manufacture\" className=\"post__input mb-1\" />\r\n</div>\r\n<div className=\"post__group\">\r\n    <p className=\"post__title mb-1\">Color</p>\r\n    <div className=\"post__input post__input--cat mb-15\" tabIndex=\"0\">\r\n        White\r\n        <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n    </div>\r\n    <p className=\"post__title mb-1\">Condition</p>\r\n    <div className=\"post__input post__input--cat mb-15\" tabIndex=\"0\">\r\n        Medium\r\n        <svg className=\"post__icon post__icon--cat-arrow\" dangerouslySetInnerHTML={{__html: utils.use('chevron-down')}} />\r\n    </div>\r\n</div> */","E:\\dec-exp\\src\\store\\reducers\\reducer_filter.js",[],"E:\\dec-exp\\src\\store\\PostFilters\\business_and_services.js",[],"E:\\dec-exp\\src\\store\\PostFilters\\for_kids.js",[],"E:\\dec-exp\\src\\store\\PostFilters\\home_and_garden.js",[],"E:\\dec-exp\\src\\store\\PostFilters\\fashion_and_style.js",[],"E:\\dec-exp\\src\\store\\PostFilters\\real_estate.js",[],"E:\\dec-exp\\src\\store\\PostFilters\\transport_auto.js",[],"E:\\dec-exp\\src\\store\\PostFilters\\sports_hobby_and_comfort.js",[],"E:\\dec-exp\\src\\store\\PostFilters\\electronics.js",[],"E:\\dec-exp\\src\\store\\PostFilters\\jobs.js",[],"E:\\dec-exp\\src\\store\\PostFilters\\pets.js",[],"E:\\dec-exp\\src\\containers\\Authorization\\AuthSignup.js",[],"E:\\dec-exp\\src\\containers\\Authorization\\ResetPass.js",[],"E:\\dec-exp\\src\\components\\Profile.js",["255","256","257","258","259","260","261"],"E:\\dec-exp\\src\\containers\\Authorization\\AuthSignin.js",["262","263"],"E:\\dec-exp\\src\\UI\\LoadingSub.js",[],{"ruleId":"264","severity":1,"message":"265","line":5,"column":25,"nodeType":"266","messageId":"267","endLine":5,"endColumn":35},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"264","severity":1,"message":"272","line":8,"column":8,"nodeType":"266","messageId":"267","endLine":8,"endColumn":12},{"ruleId":"264","severity":1,"message":"273","line":9,"column":13,"nodeType":"266","messageId":"267","endLine":9,"endColumn":18},{"ruleId":"264","severity":1,"message":"274","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":17},{"ruleId":"264","severity":1,"message":"275","line":9,"column":8,"nodeType":"266","messageId":"267","endLine":9,"endColumn":15},{"ruleId":"276","severity":1,"message":"277","line":168,"column":37,"nodeType":"278","endLine":168,"endColumn":93},{"ruleId":"276","severity":1,"message":"277","line":171,"column":37,"nodeType":"278","endLine":171,"endColumn":93},{"ruleId":"276","severity":1,"message":"277","line":174,"column":37,"nodeType":"278","endLine":174,"endColumn":93},{"ruleId":"276","severity":1,"message":"277","line":177,"column":37,"nodeType":"278","endLine":177,"endColumn":93},{"ruleId":"276","severity":1,"message":"277","line":180,"column":37,"nodeType":"278","endLine":180,"endColumn":93},{"ruleId":"276","severity":1,"message":"277","line":17,"column":17,"nodeType":"278","endLine":17,"endColumn":54},{"ruleId":"264","severity":1,"message":"279","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"276","severity":1,"message":"277","line":57,"column":25,"nodeType":"278","endLine":57,"endColumn":64},{"ruleId":"276","severity":1,"message":"277","line":62,"column":25,"nodeType":"278","endLine":62,"endColumn":88},{"ruleId":"276","severity":1,"message":"277","line":73,"column":25,"nodeType":"278","endLine":73,"endColumn":64},{"ruleId":"276","severity":1,"message":"277","line":81,"column":25,"nodeType":"278","endLine":81,"endColumn":64},{"ruleId":"276","severity":1,"message":"277","line":87,"column":25,"nodeType":"278","endLine":87,"endColumn":64},{"ruleId":"264","severity":1,"message":"280","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":27},{"ruleId":"264","severity":1,"message":"281","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":12},{"ruleId":"282","severity":1,"message":"283","line":490,"column":1,"nodeType":"284","messageId":"285","endLine":514,"endColumn":51},{"ruleId":"264","severity":1,"message":"286","line":39,"column":15,"nodeType":"266","messageId":"267","endLine":39,"endColumn":19},{"ruleId":"264","severity":1,"message":"287","line":40,"column":15,"nodeType":"266","messageId":"267","endLine":40,"endColumn":20},{"ruleId":"264","severity":1,"message":"288","line":41,"column":15,"nodeType":"266","messageId":"267","endLine":41,"endColumn":21},{"ruleId":"264","severity":1,"message":"289","line":42,"column":15,"nodeType":"266","messageId":"267","endLine":42,"endColumn":22},{"ruleId":"264","severity":1,"message":"290","line":51,"column":15,"nodeType":"266","messageId":"267","endLine":51,"endColumn":26},{"ruleId":"264","severity":1,"message":"291","line":52,"column":15,"nodeType":"266","messageId":"267","endLine":52,"endColumn":27},{"ruleId":"264","severity":1,"message":"292","line":53,"column":15,"nodeType":"266","messageId":"267","endLine":53,"endColumn":28},{"ruleId":"264","severity":1,"message":"293","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":13},{"ruleId":"264","severity":1,"message":"294","line":60,"column":24,"nodeType":"266","messageId":"267","endLine":60,"endColumn":29},"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["295"],"no-negated-in-lhs",["296"],"'Post' is defined but never used.","'utils' is defined but never used.","'Searchbar' is defined but never used.","'Tooltip' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'LazyLoadComponent' is defined but never used.","'audi' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'number' is assigned a value but never used.","'company' is assigned a value but never used.","'nameCompany' is assigned a value but never used.","'emailCompany' is assigned a value but never used.","'numberCompany' is assigned a value but never used.","'axios' is defined but never used.","'query' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]